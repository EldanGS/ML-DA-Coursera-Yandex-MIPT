{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Корректность проверена на Python 3.6:**\n",
    "+ pandas 0.23.4\n",
    "+ numpy 1.15.4\n",
    "+ sklearn 0.20.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Sklearn"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## sklearn.grid_search"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "документация: http://scikit-learn.org/stable/modules/grid_search.html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import model_selection, datasets, linear_model, metrics\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Генерация датасета"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "iris = datasets.load_iris()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data, test_data, train_labels, test_labels = model_selection.train_test_split(iris.data, iris.target, \n",
    "                                                                                     test_size = 0.3,random_state = 0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Задание модели"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "classifier = linear_model.SGDClassifier(random_state = 0, tol=1e-3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Генерация сетки"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['alpha', 'average', 'class_weight', 'early_stopping', 'epsilon', 'eta0', 'fit_intercept', 'l1_ratio', 'learning_rate', 'loss', 'max_iter', 'n_iter', 'n_iter_no_change', 'n_jobs', 'penalty', 'power_t', 'random_state', 'shuffle', 'tol', 'validation_fraction', 'verbose', 'warm_start'])"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "classifier.get_params().keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "parameters_grid = {\n",
    "    'loss' : ['hinge', 'log', 'squared_hinge', 'squared_loss'],\n",
    "    'penalty' : ['l1', 'l2'],\n",
    "    'max_iter' : np.arange(5,10),\n",
    "    'alpha' : np.linspace(0.0001, 0.001, num = 5),\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "cv = model_selection.StratifiedShuffleSplit(n_splits=10, test_size = 0.2, random_state = 0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Подбор параметров и оценка качества"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Grid search"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "grid_cv = model_selection.GridSearchCV(classifier, parameters_grid, scoring = 'accuracy', cv = cv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 3.53 s, sys: 0 ns, total: 3.53 s\n",
      "Wall time: 3.53 s\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=StratifiedShuffleSplit(n_splits=10, random_state=0, test_size=0.2,\n",
       "            train_size=None),\n",
       "       error_score='raise-deprecating',\n",
       "       estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,\n",
       "       early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,\n",
       "       l1_ratio=0.15, learning_rate='optimal', loss='hinge', max_iter=None,\n",
       "       n_iter=None, n_iter_no_change=5, n_jobs=None, penalty='l2',\n",
       "       power_t=0.5, random_state=0, shuffle=True, tol=0.001,\n",
       "       validation_fraction=0.1, verbose=0, warm_start=False),\n",
       "       fit_params=None, iid='warn', n_jobs=None,\n",
       "       param_grid={'loss': ['hinge', 'log', 'squared_hinge', 'squared_loss'], 'penalty': ['l1', 'l2'], 'max_iter': array([5, 6, 7, 8, 9]), 'alpha': array([0.0001 , 0.00032, 0.00055, 0.00078, 0.001  ])},\n",
       "       pre_dispatch='2*n_jobs', refit=True, return_train_score='warn',\n",
       "       scoring='accuracy', verbose=0)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "grid_cv.fit(train_data, train_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SGDClassifier(alpha=0.000325, average=False, class_weight=None,\n",
       "       early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,\n",
       "       l1_ratio=0.15, learning_rate='optimal', loss='squared_hinge',\n",
       "       max_iter=9, n_iter=None, n_iter_no_change=5, n_jobs=None,\n",
       "       penalty='l1', power_t=0.5, random_state=0, shuffle=True, tol=0.001,\n",
       "       validation_fraction=0.1, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid_cv.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9047619047619048\n",
      "{'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l1'}\n"
     ]
    }
   ],
   "source": [
    "print(grid_cv.best_score_)\n",
    "print(grid_cv.best_params_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'mean_fit_time': array([0.00093603, 0.00101256, 0.0009665 , 0.00084591, 0.00089548,\n",
       "        0.0008132 , 0.00095484, 0.00081444, 0.00089443, 0.00084577,\n",
       "        0.00088301, 0.00091863, 0.00105679, 0.00101361, 0.00109994,\n",
       "        0.00089314, 0.00093484, 0.00090384, 0.00101807, 0.00096958,\n",
       "        0.00087314, 0.00079179, 0.00083323, 0.00088668, 0.00090554,\n",
       "        0.00102043, 0.00105112, 0.00081806, 0.00091743, 0.00085003,\n",
       "        0.00091741, 0.00080764, 0.00084693, 0.00079901, 0.00086019,\n",
       "        0.00090058, 0.00109951, 0.00099337, 0.00090253, 0.00084298,\n",
       "        0.00085173, 0.00083909, 0.00095599, 0.00080907, 0.00083535,\n",
       "        0.00080056, 0.00083768, 0.00089543, 0.00094211, 0.00096862,\n",
       "        0.00094712, 0.00083649, 0.00088749, 0.00093219, 0.00095274,\n",
       "        0.00095372, 0.0009357 , 0.00089834, 0.00096056, 0.00098786,\n",
       "        0.00089307, 0.00080247, 0.00088987, 0.0008225 , 0.00095558,\n",
       "        0.00083554, 0.00093787, 0.00083416, 0.00085156, 0.00082226,\n",
       "        0.00088158, 0.00086825, 0.00096357, 0.0009227 , 0.00087917,\n",
       "        0.00080984, 0.00092759, 0.00089691, 0.00101705, 0.00084953,\n",
       "        0.00081987, 0.00086024, 0.00088933, 0.00086448, 0.00091786,\n",
       "        0.00102477, 0.00088964, 0.00084324, 0.00092628, 0.00086081,\n",
       "        0.0009109 , 0.00086834, 0.00091586, 0.00086656, 0.00099876,\n",
       "        0.00099416, 0.00102317, 0.00102887, 0.00112007, 0.00095108,\n",
       "        0.00081465, 0.00100284, 0.00096364, 0.00080855, 0.00085993,\n",
       "        0.00080376, 0.0008419 , 0.00088096, 0.00091395, 0.0009011 ,\n",
       "        0.00089784, 0.00092721, 0.00086968, 0.00079796, 0.00085702,\n",
       "        0.00080914, 0.00087254, 0.00084922, 0.0008832 , 0.00083766,\n",
       "        0.00080454, 0.00080276, 0.00082371, 0.00078576, 0.0008301 ,\n",
       "        0.00080063, 0.0008481 , 0.00081072, 0.00085576, 0.00081954,\n",
       "        0.00091009, 0.00090415, 0.0009661 , 0.00107007, 0.00101092,\n",
       "        0.00092964, 0.00096788, 0.00093544, 0.00099738, 0.00095913,\n",
       "        0.0008508 , 0.00092702, 0.00094652, 0.00085721, 0.00088995,\n",
       "        0.00085034, 0.0009197 , 0.00082572, 0.00085857, 0.0008743 ,\n",
       "        0.00087845, 0.00085533, 0.00089452, 0.00084517, 0.0009002 ,\n",
       "        0.00083947, 0.00091679, 0.00086238, 0.0009109 , 0.00085652,\n",
       "        0.0008641 , 0.00080154, 0.0008321 , 0.00080428, 0.0008323 ,\n",
       "        0.00079646, 0.00083878, 0.00080664, 0.00085075, 0.00080574,\n",
       "        0.00086458, 0.00085747, 0.00090926, 0.00095048, 0.00097704,\n",
       "        0.00093002, 0.00096769, 0.00094464, 0.00098968, 0.00095444,\n",
       "        0.00085392, 0.00081565, 0.000857  , 0.00082545, 0.00085695,\n",
       "        0.0008301 , 0.00088079, 0.00085006, 0.00087779, 0.00087171,\n",
       "        0.00089116, 0.00084114, 0.00089953, 0.00082853, 0.0008635 ,\n",
       "        0.00081437, 0.00088415, 0.00086823, 0.00090046, 0.00085781]),\n",
       " 'std_fit_time': array([1.47936605e-04, 2.15301931e-04, 1.91894487e-04, 4.38560591e-05,\n",
       "        4.57088213e-05, 1.42807753e-05, 1.06603367e-04, 2.65825489e-05,\n",
       "        4.15277328e-05, 5.84760826e-05, 3.06495777e-05, 2.76785385e-05,\n",
       "        2.55944566e-04, 1.00353730e-04, 2.09218389e-04, 1.91111342e-05,\n",
       "        2.01482744e-05, 2.65786996e-05, 6.96393244e-05, 4.26983713e-05,\n",
       "        7.42293799e-05, 2.26289252e-05, 2.61250197e-05, 5.32325208e-05,\n",
       "        1.67445393e-05, 1.91422861e-04, 1.16967195e-04, 1.72529410e-05,\n",
       "        7.02318168e-05, 2.34732869e-05, 8.92300094e-05, 2.67325071e-05,\n",
       "        1.84188344e-05, 9.00708032e-06, 3.89749043e-05, 5.15266679e-05,\n",
       "        2.22680555e-04, 1.72952204e-04, 2.69626537e-05, 2.94390569e-05,\n",
       "        5.92124625e-05, 2.88254274e-05, 1.34729453e-04, 3.07881849e-05,\n",
       "        1.11298583e-05, 1.85454716e-05, 1.52890271e-05, 9.55475091e-05,\n",
       "        3.85550561e-05, 3.04258093e-04, 7.25880429e-05, 9.11448378e-06,\n",
       "        6.38783843e-06, 5.20347607e-05, 4.70380522e-05, 1.01001596e-04,\n",
       "        1.46433268e-05, 1.71172087e-05, 2.89831984e-05, 5.37369456e-05,\n",
       "        7.20261541e-05, 3.94898905e-05, 9.55967054e-05, 6.57323784e-05,\n",
       "        2.99268030e-05, 4.12330785e-05, 6.26323429e-05, 2.17492244e-05,\n",
       "        1.20815189e-05, 2.36959283e-05, 5.46996031e-05, 2.65921806e-05,\n",
       "        8.71889442e-05, 1.50542613e-04, 5.45539273e-05, 3.35493150e-06,\n",
       "        8.32684661e-05, 8.83604119e-05, 8.46906153e-05, 1.76898874e-05,\n",
       "        2.11491660e-05, 5.99141146e-05, 3.98795895e-05, 1.88089292e-05,\n",
       "        6.52353316e-05, 2.03158059e-04, 4.17664441e-05, 9.11725739e-05,\n",
       "        4.84880851e-05, 4.11714095e-05, 3.38685655e-05, 3.87188322e-05,\n",
       "        5.61229638e-05, 2.63497728e-05, 3.45060879e-05, 4.84117482e-05,\n",
       "        5.26185267e-05, 1.14613800e-04, 2.23641773e-04, 6.28843590e-05,\n",
       "        2.06730906e-05, 3.07103284e-04, 1.19204655e-04, 1.50279563e-05,\n",
       "        4.17266299e-05, 1.67208782e-05, 7.75414049e-06, 3.05460633e-05,\n",
       "        1.62346072e-05, 5.53734272e-05, 2.68658281e-05, 2.05499334e-04,\n",
       "        3.12532202e-05, 6.86086487e-06, 1.08809810e-05, 9.85958119e-06,\n",
       "        1.61977484e-05, 3.43013747e-05, 2.03783600e-05, 1.29499702e-05,\n",
       "        5.27681236e-06, 3.19662327e-05, 1.19325819e-05, 4.63912565e-06,\n",
       "        9.65818921e-06, 1.33622713e-05, 1.22277821e-05, 2.18293530e-05,\n",
       "        4.02978253e-05, 1.87161470e-05, 3.48480869e-05, 6.61572722e-05,\n",
       "        6.01139671e-05, 1.54761384e-04, 9.96684596e-05, 4.18183469e-05,\n",
       "        3.92326013e-05, 2.22219034e-05, 4.96535011e-05, 3.40313522e-05,\n",
       "        3.29751513e-05, 2.82262925e-04, 1.31101085e-04, 7.12136939e-05,\n",
       "        8.65988038e-05, 7.53436058e-05, 8.23754132e-05, 2.53563623e-05,\n",
       "        1.34327025e-05, 7.87717414e-05, 6.01231198e-05, 4.78055411e-05,\n",
       "        7.54643916e-05, 6.08755470e-05, 4.10289281e-05, 2.11497572e-05,\n",
       "        5.60097004e-05, 2.50258773e-05, 3.98621605e-05, 2.41315056e-05,\n",
       "        5.75090176e-05, 3.18392726e-05, 2.57181603e-05, 2.51253367e-05,\n",
       "        1.16237065e-05, 7.25137478e-06, 7.87391570e-06, 1.52926702e-05,\n",
       "        1.24946122e-05, 6.93896375e-06, 7.60704731e-06, 4.03652230e-05,\n",
       "        1.71459430e-05, 8.34178330e-05, 7.32528814e-05, 3.94427926e-05,\n",
       "        1.49565811e-05, 2.45208496e-05, 2.86173812e-05, 2.20296187e-05,\n",
       "        3.88821451e-05, 3.42693763e-05, 7.53537186e-05, 2.49886785e-05,\n",
       "        2.89314929e-05, 5.17877919e-05, 3.46020934e-05, 2.98956744e-05,\n",
       "        3.28939971e-05, 9.80811148e-05, 5.36661951e-05, 3.76797917e-05,\n",
       "        7.21512647e-05, 5.19066815e-05, 1.79295844e-05, 1.30343461e-05,\n",
       "        1.95817578e-05, 5.93799361e-05, 3.88674645e-05, 3.77110745e-05]),\n",
       " 'mean_score_time': array([0.00023487, 0.00029144, 0.0002336 , 0.00021999, 0.00021362,\n",
       "        0.00020607, 0.00023026, 0.0002058 , 0.00021083, 0.00020688,\n",
       "        0.00021205, 0.00022936, 0.00023637, 0.00025129, 0.00023739,\n",
       "        0.00020347, 0.00020413, 0.0002063 , 0.00022314, 0.00021532,\n",
       "        0.00021167, 0.00020258, 0.0002192 , 0.00022314, 0.00021753,\n",
       "        0.00025239, 0.00025225, 0.00020654, 0.00021632, 0.00022278,\n",
       "        0.00023046, 0.00020816, 0.00020711, 0.00020289, 0.00020905,\n",
       "        0.00021977, 0.0002748 , 0.00024202, 0.00020874, 0.00020664,\n",
       "        0.0002142 , 0.00022621, 0.00023308, 0.00020506, 0.0002079 ,\n",
       "        0.00020244, 0.00020514, 0.00021527, 0.00022545, 0.00023391,\n",
       "        0.00021882, 0.00021129, 0.00020456, 0.00022607, 0.00021362,\n",
       "        0.00022137, 0.00020876, 0.00020497, 0.00022166, 0.00022156,\n",
       "        0.0002316 , 0.00021191, 0.00022113, 0.00021343, 0.00023167,\n",
       "        0.00021389, 0.00022423, 0.00021753, 0.00020266, 0.00021291,\n",
       "        0.00022755, 0.00021787, 0.00025063, 0.00023336, 0.00020781,\n",
       "        0.00021486, 0.00021627, 0.00021048, 0.00023232, 0.00021646,\n",
       "        0.00020487, 0.00022624, 0.00021892, 0.00022922, 0.00025086,\n",
       "        0.00025506, 0.00021589, 0.00021312, 0.00022051, 0.00022688,\n",
       "        0.0002073 , 0.00020864, 0.0002111 , 0.00021307, 0.00022609,\n",
       "        0.00023162, 0.00023246, 0.00024943, 0.00027208, 0.00021169,\n",
       "        0.00020289, 0.00026431, 0.00023673, 0.00021234, 0.00020711,\n",
       "        0.00020375, 0.00020611, 0.00022068, 0.00021331, 0.00022595,\n",
       "        0.0002188 , 0.00025289, 0.00020733, 0.00020289, 0.00020459,\n",
       "        0.00020394, 0.00020542, 0.0002058 , 0.0002203 , 0.0002084 ,\n",
       "        0.00020235, 0.00020492, 0.00020583, 0.00020339, 0.00020525,\n",
       "        0.00020328, 0.00021098, 0.00020792, 0.00020676, 0.00020933,\n",
       "        0.00021508, 0.00023277, 0.00021975, 0.00025926, 0.00022719,\n",
       "        0.00021234, 0.00020859, 0.00022035, 0.00021031, 0.0002234 ,\n",
       "        0.00021315, 0.00023098, 0.00023527, 0.000229  , 0.0002099 ,\n",
       "        0.00022502, 0.00021355, 0.00020537, 0.00020363, 0.00021343,\n",
       "        0.00021236, 0.00022264, 0.00021439, 0.00021298, 0.00021806,\n",
       "        0.00021114, 0.00021782, 0.00021305, 0.00021081, 0.00021439,\n",
       "        0.00020978, 0.00020819, 0.00020864, 0.00020628, 0.0002135 ,\n",
       "        0.00020361, 0.00020664, 0.00020645, 0.00020516, 0.00020297,\n",
       "        0.00020335, 0.00020561, 0.00020669, 0.00021522, 0.00020854,\n",
       "        0.00020926, 0.00021672, 0.00021331, 0.00021291, 0.00021133,\n",
       "        0.00022252, 0.00021553, 0.00020936, 0.00022707, 0.00021355,\n",
       "        0.00020807, 0.00021417, 0.00021608, 0.00020719, 0.0002352 ,\n",
       "        0.00021048, 0.00022449, 0.00021365, 0.0002084 , 0.00020618,\n",
       "        0.00020385, 0.00021341, 0.0002121 , 0.0002255 , 0.00020795]),\n",
       " 'std_score_time': array([3.93424538e-05, 1.12458190e-04, 4.41448980e-05, 2.16751338e-05,\n",
       "        7.32531142e-06, 4.68545588e-06, 3.86902450e-05, 8.05897119e-06,\n",
       "        8.87676268e-06, 5.40747844e-06, 1.88496087e-05, 2.34398325e-05,\n",
       "        3.01190144e-05, 3.55908712e-05, 5.68356139e-05, 1.31108542e-06,\n",
       "        8.10623169e-07, 6.42320184e-06, 2.67202138e-05, 1.29039086e-05,\n",
       "        1.21625260e-05, 1.26631467e-06, 3.47669882e-05, 1.21197570e-05,\n",
       "        6.00341580e-06, 4.37013126e-05, 4.14989436e-05, 6.00327377e-06,\n",
       "        1.67982936e-05, 2.53288071e-05, 2.82990299e-05, 4.02136597e-06,\n",
       "        6.54939786e-06, 1.26159254e-06, 1.61029822e-05, 1.15212186e-05,\n",
       "        1.05344445e-04, 3.37251402e-05, 1.01608001e-05, 1.31061059e-05,\n",
       "        1.39625378e-05, 2.68283519e-05, 2.19109658e-05, 3.44916789e-06,\n",
       "        9.64579224e-06, 1.17504325e-06, 6.26746170e-06, 9.98313567e-06,\n",
       "        1.65113086e-05, 4.76501406e-05, 1.71219734e-05, 2.22407095e-05,\n",
       "        2.29179665e-06, 2.32180527e-05, 1.27378905e-05, 3.09832718e-05,\n",
       "        1.02026439e-05, 3.06819794e-06, 4.81039898e-05, 9.82275866e-06,\n",
       "        4.40540764e-05, 9.45521314e-06, 1.40133550e-05, 1.66103676e-05,\n",
       "        9.04675206e-06, 1.87614214e-05, 2.01562428e-05, 3.44328269e-05,\n",
       "        9.23391186e-07, 1.67647428e-05, 3.48251450e-05, 6.12025647e-06,\n",
       "        7.09267664e-05, 4.68490749e-05, 9.18836870e-06, 2.20244574e-05,\n",
       "        2.03717341e-05, 8.15572774e-06, 3.24696345e-05, 3.02510713e-05,\n",
       "        3.47968629e-06, 1.91705291e-05, 1.82092492e-05, 1.92937059e-05,\n",
       "        8.27110304e-05, 7.17367234e-05, 1.52002830e-05, 1.99179995e-05,\n",
       "        1.29329498e-05, 2.81685674e-05, 5.21068700e-06, 3.45575373e-06,\n",
       "        1.49673708e-05, 1.97956493e-05, 1.33348473e-05, 1.88565584e-05,\n",
       "        2.04693146e-05, 5.08324737e-05, 9.63305950e-05, 1.40995716e-05,\n",
       "        1.63451543e-06, 6.48232188e-05, 3.48539015e-05, 1.13844310e-05,\n",
       "        4.54379777e-06, 2.93206389e-06, 6.51301784e-06, 7.72211241e-06,\n",
       "        5.68821962e-06, 2.44815483e-05, 1.50415672e-05, 7.87696920e-05,\n",
       "        3.75794877e-06, 9.71391143e-07, 1.95575910e-06, 1.84431835e-06,\n",
       "        3.62082396e-06, 3.72696362e-06, 3.89296000e-05, 6.71684845e-06,\n",
       "        1.10832589e-06, 4.28391150e-06, 7.83599576e-06, 3.30439894e-06,\n",
       "        8.43304411e-06, 3.43388975e-06, 1.83146598e-05, 9.66842458e-06,\n",
       "        7.68714150e-06, 8.47711331e-06, 1.40798031e-05, 2.02234756e-05,\n",
       "        2.05173144e-05, 5.47918056e-05, 2.76527423e-05, 8.24059597e-06,\n",
       "        3.74165279e-06, 2.31026988e-05, 7.00760024e-06, 2.90174119e-05,\n",
       "        7.52889483e-06, 3.07195285e-05, 3.48670034e-05, 3.76082543e-05,\n",
       "        6.11226379e-06, 2.98438355e-05, 4.71568806e-06, 3.22914180e-06,\n",
       "        1.90570880e-06, 1.21208592e-05, 5.79906329e-06, 3.27331952e-05,\n",
       "        9.07607894e-06, 1.05751743e-05, 2.01234885e-05, 7.58021118e-06,\n",
       "        2.35067178e-05, 8.21157337e-06, 8.56503606e-06, 1.22384695e-05,\n",
       "        4.97541360e-06, 7.66047465e-06, 7.02056693e-06, 4.94372293e-06,\n",
       "        2.68896101e-05, 2.27436829e-06, 1.09408153e-05, 1.00935569e-05,\n",
       "        5.47454953e-06, 1.12865452e-06, 2.90919519e-06, 5.61595963e-06,\n",
       "        4.45460089e-06, 1.05039823e-05, 7.02752664e-06, 1.61720923e-06,\n",
       "        1.24572282e-05, 8.55324783e-06, 1.25445335e-05, 9.12193347e-06,\n",
       "        2.83910482e-05, 1.74166363e-05, 7.55034412e-06, 3.01895166e-05,\n",
       "        2.35349572e-05, 8.87740302e-06, 1.28312839e-05, 1.43495703e-05,\n",
       "        3.07365844e-06, 4.42281887e-05, 4.68151136e-06, 1.76217622e-05,\n",
       "        8.14083372e-06, 9.80619413e-06, 3.59972579e-06, 3.13046409e-06,\n",
       "        2.61218972e-05, 1.32132945e-05, 4.06423334e-05, 4.50200949e-06]),\n",
       " 'param_alpha': masked_array(data=[0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,\n",
       "                    0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,\n",
       "                    0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,\n",
       "                    0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,\n",
       "                    0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,\n",
       "                    0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.000325,\n",
       "                    0.000325, 0.000325, 0.000325, 0.000325, 0.000325,\n",
       "                    0.000325, 0.000325, 0.000325, 0.000325, 0.000325,\n",
       "                    0.000325, 0.000325, 0.000325, 0.000325, 0.000325,\n",
       "                    0.000325, 0.000325, 0.000325, 0.000325, 0.000325,\n",
       "                    0.000325, 0.000325, 0.000325, 0.000325, 0.000325,\n",
       "                    0.000325, 0.000325, 0.000325, 0.000325, 0.000325,\n",
       "                    0.000325, 0.000325, 0.000325, 0.000325, 0.000325,\n",
       "                    0.000325, 0.000325, 0.000325, 0.000325, 0.00055,\n",
       "                    0.00055, 0.00055, 0.00055, 0.00055, 0.00055, 0.00055,\n",
       "                    0.00055, 0.00055, 0.00055, 0.00055, 0.00055, 0.00055,\n",
       "                    0.00055, 0.00055, 0.00055, 0.00055, 0.00055, 0.00055,\n",
       "                    0.00055, 0.00055, 0.00055, 0.00055, 0.00055, 0.00055,\n",
       "                    0.00055, 0.00055, 0.00055, 0.00055, 0.00055, 0.00055,\n",
       "                    0.00055, 0.00055, 0.00055, 0.00055, 0.00055, 0.00055,\n",
       "                    0.00055, 0.00055, 0.00055, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.0007750000000000001,\n",
       "                    0.0007750000000000001, 0.001, 0.001, 0.001, 0.001,\n",
       "                    0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n",
       "                    0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n",
       "                    0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n",
       "                    0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,\n",
       "                    0.001, 0.001, 0.001, 0.001],\n",
       "              mask=[False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False],\n",
       "        fill_value='?',\n",
       "             dtype=object),\n",
       " 'param_loss': masked_array(data=['hinge', 'hinge', 'hinge', 'hinge', 'hinge', 'hinge',\n",
       "                    'hinge', 'hinge', 'hinge', 'hinge', 'log', 'log',\n",
       "                    'log', 'log', 'log', 'log', 'log', 'log', 'log', 'log',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'hinge', 'hinge',\n",
       "                    'hinge', 'hinge', 'hinge', 'hinge', 'hinge', 'hinge',\n",
       "                    'hinge', 'hinge', 'log', 'log', 'log', 'log', 'log',\n",
       "                    'log', 'log', 'log', 'log', 'log', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'hinge', 'hinge', 'hinge', 'hinge',\n",
       "                    'hinge', 'hinge', 'hinge', 'hinge', 'hinge', 'hinge',\n",
       "                    'log', 'log', 'log', 'log', 'log', 'log', 'log', 'log',\n",
       "                    'log', 'log', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'hinge', 'hinge', 'hinge', 'hinge', 'hinge', 'hinge',\n",
       "                    'hinge', 'hinge', 'hinge', 'hinge', 'log', 'log',\n",
       "                    'log', 'log', 'log', 'log', 'log', 'log', 'log', 'log',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'hinge', 'hinge',\n",
       "                    'hinge', 'hinge', 'hinge', 'hinge', 'hinge', 'hinge',\n",
       "                    'hinge', 'hinge', 'log', 'log', 'log', 'log', 'log',\n",
       "                    'log', 'log', 'log', 'log', 'log', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_hinge', 'squared_hinge', 'squared_hinge',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss', 'squared_loss', 'squared_loss',\n",
       "                    'squared_loss'],\n",
       "              mask=[False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False],\n",
       "        fill_value='?',\n",
       "             dtype=object),\n",
       " 'param_max_iter': masked_array(data=[5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8,\n",
       "                    9, 9, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7,\n",
       "                    8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6,\n",
       "                    7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5,\n",
       "                    6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,\n",
       "                    5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8,\n",
       "                    9, 9, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7,\n",
       "                    8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6,\n",
       "                    7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5,\n",
       "                    6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,\n",
       "                    5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 5, 5, 6, 6, 7, 7, 8, 8,\n",
       "                    9, 9],\n",
       "              mask=[False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False],\n",
       "        fill_value='?',\n",
       "             dtype=object),\n",
       " 'param_penalty': masked_array(data=['l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1',\n",
       "                    'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2', 'l1', 'l2',\n",
       "                    'l1', 'l2'],\n",
       "              mask=[False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False,\n",
       "                    False, False, False, False, False, False, False, False],\n",
       "        fill_value='?',\n",
       "             dtype=object),\n",
       " 'params': [{'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'hinge', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'log', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.0001, 'loss': 'squared_loss', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'hinge', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'log', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.000325, 'loss': 'squared_loss', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'hinge', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'log', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.00055, 'loss': 'squared_loss', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 5,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 5,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 6,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 6,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 7,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 7,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 8,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 8,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 9,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'hinge',\n",
       "   'max_iter': 9,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 5,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 5,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 6,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 6,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 7,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 7,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 8,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 8,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 9,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'log',\n",
       "   'max_iter': 9,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 5,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 5,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 6,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 6,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 7,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 7,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 8,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 8,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 9,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_hinge',\n",
       "   'max_iter': 9,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 5,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 5,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 6,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 6,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 7,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 7,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 8,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 8,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 9,\n",
       "   'penalty': 'l1'},\n",
       "  {'alpha': 0.0007750000000000001,\n",
       "   'loss': 'squared_loss',\n",
       "   'max_iter': 9,\n",
       "   'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'hinge', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'log', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_hinge', 'max_iter': 9, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 5, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 5, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 6, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 6, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 7, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 7, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 8, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 8, 'penalty': 'l2'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 9, 'penalty': 'l1'},\n",
       "  {'alpha': 0.001, 'loss': 'squared_loss', 'max_iter': 9, 'penalty': 'l2'}],\n",
       " 'split0_test_score': array([0.85714286, 0.80952381, 0.85714286, 0.61904762, 0.38095238,\n",
       "        0.76190476, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.9047619 , 0.42857143, 0.38095238, 0.61904762,\n",
       "        0.76190476, 0.80952381, 0.71428571, 0.71428571, 0.76190476,\n",
       "        0.95238095, 0.85714286, 0.95238095, 0.61904762, 0.61904762,\n",
       "        0.9047619 , 0.80952381, 0.71428571, 0.76190476, 0.76190476,\n",
       "        0.23809524, 0.33333333, 0.        , 0.38095238, 0.33333333,\n",
       "        0.38095238, 0.33333333, 0.33333333, 0.28571429, 0.38095238,\n",
       "        0.9047619 , 0.85714286, 0.95238095, 0.9047619 , 0.61904762,\n",
       "        0.52380952, 0.80952381, 0.71428571, 0.85714286, 0.76190476,\n",
       "        0.71428571, 0.9047619 , 0.80952381, 0.28571429, 0.61904762,\n",
       "        0.42857143, 0.80952381, 0.71428571, 0.80952381, 0.76190476,\n",
       "        0.95238095, 0.71428571, 0.95238095, 0.28571429, 0.61904762,\n",
       "        0.66666667, 0.85714286, 0.71428571, 0.85714286, 0.71428571,\n",
       "        0.33333333, 0.52380952, 0.38095238, 0.33333333, 0.28571429,\n",
       "        0.38095238, 0.33333333, 0.33333333, 0.33333333, 0.33333333,\n",
       "        0.95238095, 0.85714286, 0.85714286, 0.57142857, 0.80952381,\n",
       "        0.9047619 , 0.9047619 , 0.71428571, 0.9047619 , 0.76190476,\n",
       "        0.9047619 , 0.76190476, 0.9047619 , 0.76190476, 0.57142857,\n",
       "        0.38095238, 0.71428571, 0.71428571, 0.9047619 , 0.76190476,\n",
       "        0.9047619 , 0.85714286, 0.66666667, 0.61904762, 0.57142857,\n",
       "        0.61904762, 0.85714286, 0.71428571, 0.76190476, 0.76190476,\n",
       "        0.33333333, 0.38095238, 0.        , 0.38095238, 0.        ,\n",
       "        0.33333333, 0.28571429, 0.28571429, 0.33333333, 0.33333333,\n",
       "        0.95238095, 0.85714286, 0.85714286, 0.47619048, 0.80952381,\n",
       "        0.38095238, 0.80952381, 0.76190476, 0.9047619 , 0.76190476,\n",
       "        0.9047619 , 0.76190476, 0.85714286, 0.76190476, 0.61904762,\n",
       "        0.33333333, 0.9047619 , 0.71428571, 0.80952381, 0.71428571,\n",
       "        0.9047619 , 0.80952381, 0.66666667, 0.80952381, 0.9047619 ,\n",
       "        0.76190476, 0.76190476, 0.71428571, 0.80952381, 0.71428571,\n",
       "        0.33333333, 0.33333333, 0.33333333, 0.61904762, 0.38095238,\n",
       "        0.33333333, 0.33333333, 0.38095238, 0.28571429, 0.38095238,\n",
       "        0.95238095, 0.85714286, 0.71428571, 0.42857143, 0.61904762,\n",
       "        0.76190476, 0.9047619 , 0.71428571, 0.95238095, 0.80952381,\n",
       "        0.9047619 , 0.95238095, 0.85714286, 0.85714286, 0.76190476,\n",
       "        0.38095238, 0.71428571, 0.76190476, 0.85714286, 0.76190476,\n",
       "        0.71428571, 0.95238095, 0.42857143, 0.9047619 , 0.80952381,\n",
       "        0.38095238, 0.71428571, 0.71428571, 0.95238095, 0.71428571,\n",
       "        0.        , 0.38095238, 0.28571429, 0.38095238, 0.33333333,\n",
       "        0.33333333, 0.38095238, 0.28571429, 0.33333333, 0.33333333]),\n",
       " 'split1_test_score': array([1.        , 0.66666667, 0.71428571, 0.71428571, 0.61904762,\n",
       "        0.61904762, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.61904762, 0.66666667, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.66666667, 0.57142857, 0.71428571, 0.71428571, 0.61904762,\n",
       "        0.9047619 , 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.38095238, 0.57142857, 0.33333333, 0.33333333, 0.19047619,\n",
       "        0.33333333, 0.38095238, 0.33333333, 0.33333333, 0.28571429,\n",
       "        0.61904762, 0.57142857, 0.71428571, 0.71428571, 0.95238095,\n",
       "        0.61904762, 0.71428571, 0.71428571, 0.9047619 , 0.71428571,\n",
       "        0.9047619 , 0.71428571, 0.71428571, 0.71428571, 0.42857143,\n",
       "        0.47619048, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.61904762, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.61904762, 0.71428571, 0.71428571, 1.        , 0.95238095,\n",
       "        0.38095238, 0.04761905, 0.38095238, 0.42857143, 0.        ,\n",
       "        0.28571429, 0.28571429, 0.28571429, 0.28571429, 0.33333333,\n",
       "        0.61904762, 0.71428571, 0.71428571, 0.71428571, 0.85714286,\n",
       "        0.61904762, 0.71428571, 0.71428571, 1.        , 0.71428571,\n",
       "        0.61904762, 0.66666667, 0.9047619 , 0.71428571, 0.57142857,\n",
       "        0.28571429, 0.71428571, 0.71428571, 1.        , 0.71428571,\n",
       "        0.71428571, 0.33333333, 0.71428571, 0.71428571, 0.66666667,\n",
       "        0.42857143, 0.71428571, 0.66666667, 0.9047619 , 0.71428571,\n",
       "        0.28571429, 0.38095238, 0.80952381, 0.52380952, 0.33333333,\n",
       "        0.19047619, 0.38095238, 0.52380952, 0.38095238, 0.23809524,\n",
       "        1.        , 0.71428571, 0.71428571, 0.71428571, 0.85714286,\n",
       "        0.61904762, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        1.        , 0.61904762, 0.95238095, 0.71428571, 1.        ,\n",
       "        0.85714286, 1.        , 0.9047619 , 1.        , 0.9047619 ,\n",
       "        1.        , 0.61904762, 0.80952381, 0.71428571, 0.38095238,\n",
       "        0.57142857, 0.95238095, 0.71428571, 0.95238095, 0.71428571,\n",
       "        0.        , 0.        , 0.04761905, 0.38095238, 0.33333333,\n",
       "        0.38095238, 0.28571429, 0.28571429, 0.33333333, 0.38095238,\n",
       "        0.95238095, 0.47619048, 0.80952381, 0.71428571, 1.        ,\n",
       "        0.61904762, 0.71428571, 0.71428571, 0.85714286, 0.71428571,\n",
       "        1.        , 0.66666667, 0.95238095, 0.71428571, 1.        ,\n",
       "        0.61904762, 0.9047619 , 0.71428571, 0.71428571, 0.95238095,\n",
       "        0.95238095, 0.61904762, 0.71428571, 0.71428571, 0.85714286,\n",
       "        0.57142857, 0.9047619 , 0.71428571, 1.        , 1.        ,\n",
       "        0.9047619 , 0.71428571, 0.38095238, 0.33333333, 0.28571429,\n",
       "        0.47619048, 0.38095238, 0.33333333, 0.42857143, 0.33333333]),\n",
       " 'split2_test_score': array([0.61904762, 0.61904762, 0.66666667, 0.61904762, 0.9047619 ,\n",
       "        0.71428571, 0.85714286, 0.52380952, 0.9047619 , 0.71428571,\n",
       "        0.61904762, 0.61904762, 0.61904762, 0.52380952, 0.85714286,\n",
       "        0.71428571, 0.71428571, 0.28571429, 0.71428571, 0.71428571,\n",
       "        0.52380952, 0.61904762, 0.61904762, 0.61904762, 0.71428571,\n",
       "        0.71428571, 0.76190476, 0.71428571, 0.85714286, 0.71428571,\n",
       "        0.33333333, 0.28571429, 0.        , 0.38095238, 0.28571429,\n",
       "        0.33333333, 0.57142857, 0.33333333, 0.33333333, 0.33333333,\n",
       "        0.80952381, 0.61904762, 0.61904762, 0.61904762, 0.71428571,\n",
       "        0.71428571, 0.85714286, 0.33333333, 0.95238095, 0.71428571,\n",
       "        0.61904762, 0.61904762, 0.76190476, 0.61904762, 0.71428571,\n",
       "        0.71428571, 0.9047619 , 0.28571429, 0.9047619 , 0.71428571,\n",
       "        0.61904762, 0.52380952, 0.66666667, 0.47619048, 0.71428571,\n",
       "        0.71428571, 0.28571429, 0.28571429, 1.        , 0.85714286,\n",
       "        0.28571429, 0.38095238, 0.28571429, 0.28571429, 0.42857143,\n",
       "        0.38095238, 0.28571429, 0.71428571, 0.28571429, 0.33333333,\n",
       "        0.61904762, 0.61904762, 0.61904762, 0.61904762, 0.71428571,\n",
       "        0.71428571, 0.85714286, 0.33333333, 1.        , 0.71428571,\n",
       "        0.61904762, 0.57142857, 0.61904762, 0.66666667, 0.71428571,\n",
       "        0.71428571, 0.95238095, 0.57142857, 0.76190476, 0.71428571,\n",
       "        0.61904762, 0.61904762, 0.85714286, 0.61904762, 0.9047619 ,\n",
       "        0.71428571, 0.95238095, 0.33333333, 1.        , 0.71428571,\n",
       "        0.38095238, 0.57142857, 0.28571429, 0.38095238, 0.38095238,\n",
       "        0.38095238, 0.33333333, 0.28571429, 0.38095238, 0.33333333,\n",
       "        0.61904762, 0.61904762, 0.85714286, 0.61904762, 1.        ,\n",
       "        0.76190476, 0.95238095, 0.38095238, 1.        , 0.85714286,\n",
       "        0.80952381, 0.61904762, 0.80952381, 0.38095238, 0.71428571,\n",
       "        0.71428571, 0.9047619 , 0.33333333, 0.71428571, 0.71428571,\n",
       "        0.61904762, 0.71428571, 1.        , 0.80952381, 0.80952381,\n",
       "        0.71428571, 0.80952381, 0.33333333, 1.        , 0.71428571,\n",
       "        0.71428571, 0.04761905, 0.38095238, 0.38095238, 0.38095238,\n",
       "        0.        , 0.57142857, 0.38095238, 0.38095238, 0.        ,\n",
       "        0.61904762, 0.61904762, 0.80952381, 0.61904762, 0.95238095,\n",
       "        0.76190476, 1.        , 0.85714286, 1.        , 0.85714286,\n",
       "        0.61904762, 0.61904762, 0.57142857, 0.61904762, 0.71428571,\n",
       "        0.71428571, 1.        , 0.76190476, 0.71428571, 0.71428571,\n",
       "        0.9047619 , 0.76190476, 0.80952381, 0.76190476, 0.95238095,\n",
       "        0.76190476, 0.80952381, 0.38095238, 0.71428571, 0.71428571,\n",
       "        0.38095238, 0.        , 0.28571429, 0.28571429, 0.38095238,\n",
       "        0.28571429, 0.47619048, 0.71428571, 0.0952381 , 0.52380952]),\n",
       " 'split3_test_score': array([0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.57142857,\n",
       "        0.28571429, 0.71428571, 0.71428571, 1.        , 1.        ,\n",
       "        0.71428571, 0.71428571, 0.80952381, 0.76190476, 0.28571429,\n",
       "        0.57142857, 0.71428571, 0.71428571, 1.        , 1.        ,\n",
       "        0.71428571, 0.71428571, 1.        , 0.71428571, 0.33333333,\n",
       "        0.28571429, 0.71428571, 0.71428571, 0.95238095, 1.        ,\n",
       "        0.38095238, 0.28571429, 0.38095238, 0.28571429, 0.28571429,\n",
       "        0.38095238, 0.28571429, 0.33333333, 0.28571429, 0.        ,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.61904762,\n",
       "        0.28571429, 0.71428571, 0.71428571, 0.95238095, 0.95238095,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.80952381, 0.42857143,\n",
       "        0.28571429, 0.71428571, 0.71428571, 0.95238095, 1.        ,\n",
       "        0.76190476, 0.71428571, 0.76190476, 0.71428571, 0.28571429,\n",
       "        0.28571429, 0.71428571, 0.71428571, 1.        , 0.95238095,\n",
       "        0.        , 0.33333333, 0.28571429, 0.52380952, 0.23809524,\n",
       "        0.28571429, 0.47619048, 0.38095238, 0.28571429, 0.38095238,\n",
       "        0.76190476, 0.80952381, 0.71428571, 0.71428571, 0.61904762,\n",
       "        0.47619048, 0.71428571, 0.71428571, 0.95238095, 1.        ,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.61904762,\n",
       "        0.42857143, 0.71428571, 0.71428571, 0.95238095, 0.71428571,\n",
       "        0.9047619 , 0.71428571, 0.95238095, 0.71428571, 0.42857143,\n",
       "        0.28571429, 0.71428571, 0.71428571, 0.95238095, 1.        ,\n",
       "        0.33333333, 0.33333333, 0.33333333, 0.38095238, 0.33333333,\n",
       "        0.38095238, 0.66666667, 0.33333333, 0.28571429, 0.38095238,\n",
       "        0.71428571, 0.80952381, 0.80952381, 0.71428571, 0.61904762,\n",
       "        0.42857143, 0.71428571, 0.71428571, 1.        , 0.76190476,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.61904762,\n",
       "        0.57142857, 0.85714286, 0.71428571, 0.95238095, 0.95238095,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.57142857,\n",
       "        0.61904762, 0.71428571, 0.71428571, 0.95238095, 1.        ,\n",
       "        0.28571429, 0.38095238, 0.28571429, 0.28571429, 0.33333333,\n",
       "        0.38095238, 0.33333333, 0.71428571, 0.28571429, 0.28571429,\n",
       "        0.71428571, 0.80952381, 1.        , 0.71428571, 0.61904762,\n",
       "        0.57142857, 0.71428571, 0.71428571, 0.80952381, 0.76190476,\n",
       "        0.71428571, 0.71428571, 0.95238095, 0.71428571, 0.61904762,\n",
       "        0.42857143, 0.80952381, 0.71428571, 0.95238095, 0.95238095,\n",
       "        0.71428571, 0.71428571, 0.9047619 , 0.71428571, 0.71428571,\n",
       "        0.28571429, 0.80952381, 0.71428571, 1.        , 1.        ,\n",
       "        0.28571429, 0.33333333, 0.28571429, 0.28571429, 0.28571429,\n",
       "        0.33333333, 0.28571429, 0.42857143, 0.47619048, 0.        ]),\n",
       " 'split4_test_score': array([0.71428571, 0.71428571, 0.61904762, 0.61904762, 0.95238095,\n",
       "        0.95238095, 0.71428571, 0.71428571, 0.85714286, 0.85714286,\n",
       "        0.71428571, 0.71428571, 0.66666667, 0.57142857, 1.        ,\n",
       "        1.        , 0.71428571, 0.71428571, 1.        , 0.85714286,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.61904762, 0.95238095,\n",
       "        0.85714286, 0.71428571, 0.71428571, 1.        , 0.85714286,\n",
       "        0.23809524, 0.38095238, 0.38095238, 0.28571429, 0.71428571,\n",
       "        0.71428571, 0.33333333, 0.33333333, 0.33333333, 0.28571429,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.61904762, 1.        ,\n",
       "        0.85714286, 0.71428571, 0.71428571, 0.9047619 , 0.9047619 ,\n",
       "        0.71428571, 0.71428571, 0.76190476, 0.61904762, 1.        ,\n",
       "        0.95238095, 0.85714286, 0.71428571, 0.85714286, 0.85714286,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.47619048, 1.        ,\n",
       "        0.95238095, 0.71428571, 0.71428571, 0.85714286, 0.85714286,\n",
       "        0.28571429, 0.28571429, 0.61904762, 0.28571429, 0.38095238,\n",
       "        0.28571429, 0.33333333, 0.28571429, 0.38095238, 0.0952381 ,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.61904762, 1.        ,\n",
       "        0.9047619 , 0.71428571, 0.71428571, 1.        , 0.85714286,\n",
       "        0.76190476, 0.71428571, 0.66666667, 0.61904762, 0.85714286,\n",
       "        0.95238095, 0.85714286, 0.85714286, 0.85714286, 0.85714286,\n",
       "        0.71428571, 0.57142857, 0.57142857, 0.61904762, 0.85714286,\n",
       "        0.95238095, 0.71428571, 0.71428571, 0.85714286, 0.85714286,\n",
       "        0.33333333, 0.33333333, 0.28571429, 0.71428571, 0.33333333,\n",
       "        0.28571429, 0.28571429, 0.71428571, 0.38095238, 0.38095238,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.61904762, 0.61904762,\n",
       "        0.9047619 , 0.71428571, 0.85714286, 0.85714286, 0.95238095,\n",
       "        0.76190476, 0.71428571, 0.71428571, 0.28571429, 0.76190476,\n",
       "        1.        , 1.        , 0.80952381, 0.85714286, 0.85714286,\n",
       "        0.71428571, 0.71428571, 0.66666667, 0.28571429, 0.9047619 ,\n",
       "        0.80952381, 0.71428571, 0.71428571, 0.85714286, 0.85714286,\n",
       "        0.        , 0.33333333, 0.        , 0.38095238, 0.28571429,\n",
       "        0.28571429, 0.38095238, 0.33333333, 0.28571429, 0.38095238,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.61904762, 1.        ,\n",
       "        0.85714286, 0.71428571, 0.71428571, 0.9047619 , 0.95238095,\n",
       "        0.76190476, 0.71428571, 0.76190476, 0.61904762, 0.85714286,\n",
       "        0.95238095, 1.        , 0.71428571, 0.9047619 , 0.66666667,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.61904762, 1.        ,\n",
       "        0.85714286, 1.        , 0.71428571, 0.85714286, 0.47619048,\n",
       "        0.28571429, 0.33333333, 0.38095238, 0.28571429, 0.38095238,\n",
       "        0.28571429, 0.38095238, 0.52380952, 0.28571429, 0.28571429]),\n",
       " 'split5_test_score': array([0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.66666667, 0.47619048, 0.61904762, 0.66666667,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.57142857, 0.52380952, 0.71428571, 0.61904762,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.80952381,\n",
       "        0.71428571, 0.66666667, 0.47619048, 0.71428571, 0.71428571,\n",
       "        0.28571429, 0.28571429, 0.28571429, 0.28571429, 0.28571429,\n",
       "        0.42857143, 0.28571429, 0.33333333, 0.33333333, 0.38095238,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.76190476, 0.33333333, 0.71428571, 0.61904762,\n",
       "        0.76190476, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.66666667, 0.71428571, 0.52380952,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.76190476, 0.28571429, 0.71428571, 0.71428571,\n",
       "        0.33333333, 0.28571429, 0.28571429, 0.28571429, 0.38095238,\n",
       "        0.38095238, 0.28571429, 0.28571429, 0.57142857, 0.33333333,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 1.        , 0.33333333, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.61904762, 0.71428571,\n",
       "        0.71428571, 0.61904762, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.61904762, 0.42857143, 0.71428571, 0.71428571,\n",
       "        0.38095238, 0.33333333, 0.28571429, 0.42857143, 0.28571429,\n",
       "        0.28571429, 0.28571429, 0.33333333, 0.38095238, 0.38095238,\n",
       "        0.66666667, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.66666667, 0.38095238, 0.71428571, 0.61904762,\n",
       "        0.95238095, 0.71428571, 0.71428571, 0.66666667, 0.71428571,\n",
       "        0.71428571, 0.66666667, 0.52380952, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.80952381,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.71428571, 0.71428571,\n",
       "        0.38095238, 0.33333333, 0.38095238, 0.33333333, 0.38095238,\n",
       "        0.33333333, 0.38095238, 0.47619048, 0.33333333, 0.28571429,\n",
       "        0.71428571, 0.71428571, 0.71428571, 0.71428571, 0.80952381,\n",
       "        0.71428571, 0.52380952, 0.52380952, 0.71428571, 0.71428571,\n",
       "        0.95238095, 0.71428571, 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.66666667, 0.61904762, 0.71428571, 0.71428571,\n",
       "        0.76190476, 0.71428571, 0.80952381, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.76190476, 0.61904762, 0.85714286, 0.71428571,\n",
       "        0.28571429, 0.71428571, 0.38095238, 0.28571429, 0.28571429,\n",
       "        0.28571429, 0.28571429, 0.38095238, 0.23809524, 0.04761905]),\n",
       " 'split6_test_score': array([0.95238095, 0.28571429, 0.80952381, 0.71428571, 1.        ,\n",
       "        0.61904762, 0.61904762, 0.28571429, 1.        , 0.85714286,\n",
       "        0.71428571, 0.71428571, 0.95238095, 0.71428571, 1.        ,\n",
       "        0.71428571, 0.61904762, 0.9047619 , 0.9047619 , 0.95238095,\n",
       "        0.61904762, 0.61904762, 0.71428571, 1.        , 1.        ,\n",
       "        0.71428571, 0.66666667, 0.61904762, 1.        , 1.        ,\n",
       "        0.38095238, 0.38095238, 0.        , 0.38095238, 0.28571429,\n",
       "        0.33333333, 0.38095238, 0.33333333, 0.76190476, 0.38095238,\n",
       "        0.61904762, 0.9047619 , 0.95238095, 0.71428571, 0.61904762,\n",
       "        1.        , 0.38095238, 0.28571429, 1.        , 0.66666667,\n",
       "        1.        , 0.71428571, 1.        , 0.71428571, 0.71428571,\n",
       "        0.95238095, 0.61904762, 0.71428571, 1.        , 0.9047619 ,\n",
       "        1.        , 0.61904762, 0.71428571, 1.        , 0.80952381,\n",
       "        1.        , 0.61904762, 0.61904762, 0.95238095, 0.71428571,\n",
       "        0.33333333, 0.28571429, 0.28571429, 0.28571429, 0.38095238,\n",
       "        0.38095238, 0.47619048, 0.38095238, 0.33333333, 0.        ,\n",
       "        0.71428571, 0.61904762, 0.71428571, 0.71428571, 1.        ,\n",
       "        0.85714286, 0.52380952, 0.61904762, 0.9047619 , 1.        ,\n",
       "        1.        , 0.76190476, 0.95238095, 0.95238095, 1.        ,\n",
       "        0.9047619 , 0.71428571, 0.42857143, 1.        , 0.71428571,\n",
       "        1.        , 0.9047619 , 0.95238095, 0.71428571, 0.95238095,\n",
       "        0.61904762, 0.61904762, 0.80952381, 1.        , 1.        ,\n",
       "        0.33333333, 0.38095238, 0.33333333, 0.28571429, 0.42857143,\n",
       "        0.33333333, 0.33333333, 0.33333333, 0.28571429, 0.28571429,\n",
       "        0.61904762, 1.        , 0.80952381, 0.71428571, 1.        ,\n",
       "        1.        , 0.42857143, 0.61904762, 1.        , 1.        ,\n",
       "        1.        , 0.61904762, 0.71428571, 0.9047619 , 1.        ,\n",
       "        1.        , 0.61904762, 0.61904762, 1.        , 1.        ,\n",
       "        0.61904762, 0.61904762, 0.95238095, 0.71428571, 0.9047619 ,\n",
       "        0.95238095, 0.61904762, 0.28571429, 1.        , 0.95238095,\n",
       "        0.33333333, 0.38095238, 0.33333333, 0.33333333, 0.52380952,\n",
       "        0.28571429, 0.33333333, 0.47619048, 0.38095238, 0.61904762,\n",
       "        1.        , 0.61904762, 1.        , 0.71428571, 1.        ,\n",
       "        1.        , 0.38095238, 0.61904762, 1.        , 0.76190476,\n",
       "        1.        , 0.80952381, 0.76190476, 1.        , 1.        ,\n",
       "        1.        , 0.66666667, 0.28571429, 1.        , 0.9047619 ,\n",
       "        0.80952381, 0.61904762, 0.95238095, 0.71428571, 1.        ,\n",
       "        0.95238095, 0.61904762, 0.33333333, 0.9047619 , 0.85714286,\n",
       "        0.33333333, 0.38095238, 0.33333333, 0.33333333, 0.66666667,\n",
       "        0.33333333, 0.33333333, 0.28571429, 0.28571429, 0.33333333]),\n",
       " 'split7_test_score': array([0.71428571, 0.71428571, 0.47619048, 0.61904762, 0.95238095,\n",
       "        0.61904762, 0.85714286, 0.61904762, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.28571429, 0.61904762, 0.95238095,\n",
       "        0.95238095, 0.76190476, 0.66666667, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.76190476, 0.28571429, 0.95238095,\n",
       "        0.47619048, 0.9047619 , 0.38095238, 0.71428571, 0.71428571,\n",
       "        0.33333333, 0.71428571, 0.38095238, 0.33333333, 0.        ,\n",
       "        0.33333333, 0.38095238, 0.33333333, 0.28571429, 0.33333333,\n",
       "        0.71428571, 0.76190476, 0.76190476, 0.61904762, 0.95238095,\n",
       "        0.61904762, 0.9047619 , 0.71428571, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.28571429, 0.95238095,\n",
       "        0.38095238, 0.95238095, 0.47619048, 0.85714286, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.33333333, 0.28571429, 0.95238095,\n",
       "        0.28571429, 0.66666667, 0.85714286, 0.76190476, 0.95238095,\n",
       "        0.61904762, 0.38095238, 0.28571429, 0.38095238, 0.38095238,\n",
       "        0.28571429, 0.61904762, 0.38095238, 0.33333333, 0.28571429,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.47619048, 0.95238095,\n",
       "        0.95238095, 0.95238095, 0.80952381, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.85714286, 1.        ,\n",
       "        1.        , 0.85714286, 0.28571429, 0.85714286, 0.71428571,\n",
       "        0.95238095, 0.71428571, 0.57142857, 0.61904762, 0.9047619 ,\n",
       "        1.        , 1.        , 0.42857143, 0.95238095, 0.71428571,\n",
       "        0.19047619, 0.38095238, 0.28571429, 0.28571429, 0.33333333,\n",
       "        0.33333333, 0.19047619, 0.        , 0.38095238, 0.28571429,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.61904762, 0.61904762,\n",
       "        0.85714286, 1.        , 0.85714286, 0.85714286, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.28571429, 0.95238095,\n",
       "        0.95238095, 1.        , 0.47619048, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.57142857, 0.85714286, 0.95238095,\n",
       "        0.61904762, 1.        , 0.52380952, 0.9047619 , 0.71428571,\n",
       "        0.28571429, 0.33333333, 0.38095238, 0.28571429, 0.23809524,\n",
       "        0.33333333, 0.38095238, 0.28571429, 0.38095238, 0.57142857,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.52380952, 0.95238095,\n",
       "        0.61904762, 0.95238095, 0.47619048, 0.71428571, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.61904762, 0.95238095,\n",
       "        0.95238095, 1.        , 0.28571429, 0.80952381, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.61904762, 0.85714286, 1.        ,\n",
       "        0.95238095, 0.95238095, 0.52380952, 0.71428571, 0.71428571,\n",
       "        0.14285714, 0.71428571, 0.28571429, 0.33333333, 0.71428571,\n",
       "        0.57142857, 0.33333333, 0.33333333, 0.38095238, 0.28571429]),\n",
       " 'split8_test_score': array([0.61904762, 0.52380952, 0.33333333, 0.33333333, 0.95238095,\n",
       "        0.95238095, 0.95238095, 1.        , 0.95238095, 1.        ,\n",
       "        0.57142857, 0.57142857, 0.52380952, 0.42857143, 0.80952381,\n",
       "        0.80952381, 0.71428571, 0.76190476, 0.85714286, 0.61904762,\n",
       "        0.61904762, 0.61904762, 0.61904762, 0.52380952, 0.9047619 ,\n",
       "        0.9047619 , 1.        , 0.76190476, 0.76190476, 0.66666667,\n",
       "        0.        , 0.28571429, 0.28571429, 0.28571429, 0.38095238,\n",
       "        0.33333333, 0.38095238, 0.57142857, 0.52380952, 0.57142857,\n",
       "        0.61904762, 0.52380952, 0.61904762, 0.33333333, 0.66666667,\n",
       "        0.95238095, 1.        , 0.85714286, 1.        , 0.66666667,\n",
       "        0.61904762, 0.57142857, 0.57142857, 0.42857143, 0.85714286,\n",
       "        0.80952381, 0.85714286, 0.76190476, 0.66666667, 0.66666667,\n",
       "        0.61904762, 0.61904762, 0.42857143, 0.95238095, 1.        ,\n",
       "        0.9047619 , 1.        , 1.        , 1.        , 0.80952381,\n",
       "        0.28571429, 0.71428571, 0.28571429, 0.19047619, 0.38095238,\n",
       "        0.38095238, 0.28571429, 0.0952381 , 0.38095238, 0.28571429,\n",
       "        0.61904762, 0.52380952, 1.        , 0.33333333, 1.        ,\n",
       "        0.95238095, 1.        , 0.85714286, 0.76190476, 0.66666667,\n",
       "        0.57142857, 0.42857143, 0.57142857, 0.42857143, 0.76190476,\n",
       "        0.47619048, 0.85714286, 0.76190476, 0.76190476, 0.57142857,\n",
       "        0.61904762, 0.57142857, 0.33333333, 0.52380952, 1.        ,\n",
       "        0.95238095, 1.        , 0.95238095, 0.76190476, 0.71428571,\n",
       "        0.28571429, 0.33333333, 0.28571429, 0.14285714, 0.38095238,\n",
       "        0.71428571, 0.        , 0.38095238, 0.23809524, 0.        ,\n",
       "        0.61904762, 0.52380952, 0.61904762, 0.33333333, 0.76190476,\n",
       "        1.        , 1.        , 0.76190476, 1.        , 0.66666667,\n",
       "        0.61904762, 0.42857143, 0.95238095, 0.33333333, 1.        ,\n",
       "        0.85714286, 1.        , 0.76190476, 0.95238095, 0.57142857,\n",
       "        0.57142857, 0.42857143, 0.47619048, 0.28571429, 0.76190476,\n",
       "        0.95238095, 1.        , 0.76190476, 0.76190476, 0.76190476,\n",
       "        0.38095238, 0.33333333, 0.38095238, 0.23809524, 0.38095238,\n",
       "        0.23809524, 0.28571429, 0.38095238, 0.28571429, 0.38095238,\n",
       "        0.61904762, 0.52380952, 0.61904762, 0.33333333, 1.        ,\n",
       "        1.        , 1.        , 0.76190476, 0.95238095, 0.95238095,\n",
       "        0.61904762, 0.42857143, 0.61904762, 0.33333333, 0.76190476,\n",
       "        0.95238095, 0.95238095, 0.71428571, 0.80952381, 0.85714286,\n",
       "        0.61904762, 0.42857143, 1.        , 0.33333333, 0.76190476,\n",
       "        1.        , 1.        , 0.80952381, 0.85714286, 0.76190476,\n",
       "        0.57142857, 0.61904762, 0.28571429, 0.71428571, 0.38095238,\n",
       "        0.38095238, 0.        , 0.47619048, 0.23809524, 0.71428571]),\n",
       " 'split9_test_score': array([0.61904762, 0.76190476, 0.42857143, 0.76190476, 0.71428571,\n",
       "        0.71428571, 0.71428571, 0.57142857, 0.9047619 , 0.76190476,\n",
       "        0.28571429, 0.61904762, 0.61904762, 0.28571429, 0.71428571,\n",
       "        0.71428571, 0.28571429, 0.28571429, 0.76190476, 0.71428571,\n",
       "        0.61904762, 0.61904762, 0.61904762, 0.61904762, 0.95238095,\n",
       "        0.95238095, 0.42857143, 0.28571429, 0.76190476, 0.71428571,\n",
       "        0.33333333, 0.28571429, 0.38095238, 0.04761905, 0.28571429,\n",
       "        0.33333333, 0.38095238, 0.33333333, 0.28571429, 0.57142857,\n",
       "        0.42857143, 0.28571429, 0.61904762, 0.28571429, 0.71428571,\n",
       "        0.95238095, 0.52380952, 0.28571429, 0.95238095, 0.71428571,\n",
       "        0.28571429, 0.9047619 , 0.42857143, 0.38095238, 0.71428571,\n",
       "        0.71428571, 0.38095238, 0.42857143, 0.71428571, 0.71428571,\n",
       "        0.42857143, 0.76190476, 0.80952381, 0.9047619 , 0.95238095,\n",
       "        0.71428571, 0.76190476, 0.57142857, 0.9047619 , 0.71428571,\n",
       "        0.33333333, 0.28571429, 0.33333333, 0.23809524, 0.28571429,\n",
       "        0.33333333, 0.28571429, 0.28571429, 0.47619048, 0.28571429,\n",
       "        0.28571429, 0.28571429, 0.61904762, 0.28571429, 0.95238095,\n",
       "        0.95238095, 0.76190476, 0.38095238, 0.80952381, 0.71428571,\n",
       "        0.42857143, 0.76190476, 0.57142857, 0.28571429, 0.95238095,\n",
       "        0.71428571, 0.66666667, 0.52380952, 0.85714286, 0.71428571,\n",
       "        0.95238095, 0.61904762, 0.28571429, 0.47619048, 0.71428571,\n",
       "        0.71428571, 0.66666667, 0.61904762, 0.71428571, 0.71428571,\n",
       "        0.33333333, 0.57142857, 0.38095238, 0.57142857, 0.33333333,\n",
       "        0.38095238, 0.23809524, 0.47619048, 0.47619048, 0.        ,\n",
       "        0.42857143, 0.28571429, 0.61904762, 0.28571429, 0.95238095,\n",
       "        0.71428571, 0.61904762, 0.57142857, 0.95238095, 0.76190476,\n",
       "        0.42857143, 0.95238095, 0.61904762, 0.33333333, 0.71428571,\n",
       "        0.71428571, 0.85714286, 0.42857143, 0.71428571, 0.76190476,\n",
       "        0.61904762, 0.28571429, 0.61904762, 0.9047619 , 0.95238095,\n",
       "        0.71428571, 0.76190476, 0.61904762, 0.71428571, 0.71428571,\n",
       "        0.33333333, 0.33333333, 0.47619048, 0.57142857, 0.28571429,\n",
       "        0.33333333, 0.47619048, 0.33333333, 0.23809524, 0.        ,\n",
       "        0.52380952, 0.28571429, 0.9047619 , 0.28571429, 0.95238095,\n",
       "        0.71428571, 0.95238095, 0.42857143, 0.95238095, 0.80952381,\n",
       "        0.42857143, 0.85714286, 0.9047619 , 0.42857143, 0.71428571,\n",
       "        0.71428571, 0.42857143, 0.61904762, 0.71428571, 0.76190476,\n",
       "        0.95238095, 0.61904762, 0.61904762, 0.28571429, 0.85714286,\n",
       "        0.71428571, 0.9047619 , 0.28571429, 0.95238095, 0.76190476,\n",
       "        0.28571429, 0.28571429, 0.38095238, 0.71428571, 0.33333333,\n",
       "        0.33333333, 0.38095238, 0.        , 0.42857143, 0.71428571]),\n",
       " 'mean_test_score': array([0.75238095, 0.65238095, 0.63333333, 0.64285714, 0.77619048,\n",
       "        0.6952381 , 0.75238095, 0.63333333, 0.83809524, 0.8       ,\n",
       "        0.63809524, 0.6952381 , 0.63333333, 0.57142857, 0.76666667,\n",
       "        0.76666667, 0.66190476, 0.62857143, 0.80952381, 0.76666667,\n",
       "        0.68571429, 0.67619048, 0.73333333, 0.64285714, 0.78571429,\n",
       "        0.74285714, 0.73809524, 0.60952381, 0.82380952, 0.78571429,\n",
       "        0.29047619, 0.38095238, 0.24285714, 0.3       , 0.3047619 ,\n",
       "        0.39047619, 0.37142857, 0.35714286, 0.37619048, 0.35238095,\n",
       "        0.68571429, 0.66666667, 0.73809524, 0.62380952, 0.75714286,\n",
       "        0.72380952, 0.73809524, 0.56666667, 0.8952381 , 0.74285714,\n",
       "        0.7047619 , 0.72857143, 0.70952381, 0.55714286, 0.71428571,\n",
       "        0.64285714, 0.75238095, 0.61904762, 0.81904762, 0.75714286,\n",
       "        0.71428571, 0.68095238, 0.67142857, 0.65238095, 0.77619048,\n",
       "        0.68571429, 0.70952381, 0.64761905, 0.9047619 , 0.82380952,\n",
       "        0.31904762, 0.35238095, 0.34285714, 0.32380952, 0.31428571,\n",
       "        0.33809524, 0.36666667, 0.34285714, 0.36666667, 0.26666667,\n",
       "        0.67142857, 0.65714286, 0.71904762, 0.57619048, 0.86190476,\n",
       "        0.8047619 , 0.81428571, 0.61904762, 0.87619048, 0.78571429,\n",
       "        0.7047619 , 0.68095238, 0.72380952, 0.66190476, 0.77619048,\n",
       "        0.65714286, 0.76666667, 0.62857143, 0.86666667, 0.71904762,\n",
       "        0.80952381, 0.66190476, 0.66190476, 0.63333333, 0.77142857,\n",
       "        0.7       , 0.78571429, 0.63809524, 0.86190476, 0.79047619,\n",
       "        0.31904762, 0.4       , 0.32857143, 0.40952381, 0.31428571,\n",
       "        0.36190476, 0.3       , 0.36666667, 0.35238095, 0.26190476,\n",
       "        0.7047619 , 0.6952381 , 0.72380952, 0.58095238, 0.7952381 ,\n",
       "        0.73809524, 0.76190476, 0.66190476, 0.9       , 0.78095238,\n",
       "        0.79047619, 0.68571429, 0.76666667, 0.53809524, 0.80952381,\n",
       "        0.77142857, 0.88095238, 0.62857143, 0.84285714, 0.79047619,\n",
       "        0.71904762, 0.63333333, 0.71904762, 0.68095238, 0.7952381 ,\n",
       "        0.74285714, 0.8047619 , 0.6       , 0.86666667, 0.78571429,\n",
       "        0.3047619 , 0.28095238, 0.3       , 0.38095238, 0.35238095,\n",
       "        0.29047619, 0.37619048, 0.4047619 , 0.31904762, 0.32857143,\n",
       "        0.75238095, 0.63333333, 0.78095238, 0.56666667, 0.89047619,\n",
       "        0.76190476, 0.78571429, 0.65238095, 0.88571429, 0.8047619 ,\n",
       "        0.77142857, 0.71904762, 0.77142857, 0.66190476, 0.80952381,\n",
       "        0.74285714, 0.81428571, 0.61904762, 0.81904762, 0.8       ,\n",
       "        0.78571429, 0.68571429, 0.74761905, 0.66190476, 0.86666667,\n",
       "        0.71904762, 0.84761905, 0.58095238, 0.88095238, 0.77142857,\n",
       "        0.34761905, 0.44761905, 0.32857143, 0.3952381 , 0.4047619 ,\n",
       "        0.36190476, 0.32380952, 0.37619048, 0.31904762, 0.35714286]),\n",
       " 'std_test_score': array([0.13093073, 0.14293649, 0.16085091, 0.11517511, 0.19754732,\n",
       "        0.17969488, 0.09712418, 0.17950549, 0.12988744, 0.11625291,\n",
       "        0.12812975, 0.08571429, 0.17950549, 0.15503639, 0.20365147,\n",
       "        0.11942796, 0.14037527, 0.19260713, 0.11468185, 0.12316683,\n",
       "        0.1069045 , 0.0791107 , 0.13162167, 0.1693659 , 0.20231091,\n",
       "        0.20448486, 0.14482768, 0.15907898, 0.1127878 , 0.11712737,\n",
       "        0.10952381, 0.13964646, 0.16281258, 0.09294867, 0.16795421,\n",
       "        0.11228406, 0.07619048, 0.07142857, 0.14514048, 0.15238095,\n",
       "        0.1208436 , 0.16903085, 0.11712737, 0.17619048, 0.14356965,\n",
       "        0.21274579, 0.17069951, 0.21449725, 0.09943149, 0.10033956,\n",
       "        0.17918941, 0.1       , 0.14356965, 0.18448924, 0.18195213,\n",
       "        0.2246186 , 0.1576471 , 0.15356681, 0.10816968, 0.12679549,\n",
       "        0.15793451, 0.06751165, 0.16963346, 0.24839622, 0.2097942 ,\n",
       "        0.23347906, 0.17359739, 0.21317171, 0.09988656, 0.1       ,\n",
       "        0.14134116, 0.16523192, 0.09943149, 0.09233676, 0.11895234,\n",
       "        0.04492372, 0.11075908, 0.14723452, 0.08793422, 0.11507663,\n",
       "        0.15857929, 0.15327121, 0.11751393, 0.15275252, 0.13375783,\n",
       "        0.15714286, 0.14669449, 0.18687064, 0.11106575, 0.11712737,\n",
       "        0.15474359, 0.1       , 0.13768412, 0.1837503 , 0.15943494,\n",
       "        0.2398034 , 0.10090295, 0.16468206, 0.09476071, 0.06546537,\n",
       "        0.13964646, 0.15275252, 0.218685  , 0.07982407, 0.17405397,\n",
       "        0.21826984, 0.14482768, 0.18095238, 0.10952381, 0.11308897,\n",
       "        0.05238095, 0.08832018, 0.18741589, 0.15386185, 0.11106575,\n",
       "        0.12988744, 0.15800629, 0.17567492, 0.06459362, 0.13842326,\n",
       "        0.1576471 , 0.18344153, 0.09712418, 0.15327121, 0.14607487,\n",
       "        0.2045403 , 0.17300859, 0.16419943, 0.10743347, 0.11507663,\n",
       "        0.17327053, 0.12634761, 0.1155682 , 0.22340389, 0.15208304,\n",
       "        0.19840635, 0.13170778, 0.17405397, 0.11866606, 0.12634761,\n",
       "        0.12857143, 0.15065992, 0.15422985, 0.20762123, 0.17567492,\n",
       "        0.12453997, 0.12679549, 0.15964814, 0.10605265, 0.10487007,\n",
       "        0.19189944, 0.13032316, 0.14607487, 0.11664237, 0.07438333,\n",
       "        0.10530164, 0.08370665, 0.12093738, 0.04785655, 0.19337086,\n",
       "        0.15327121, 0.16085091, 0.14158161, 0.15714286, 0.14607487,\n",
       "        0.14285714, 0.20231091, 0.12962531, 0.10257457, 0.08637313,\n",
       "        0.18045043, 0.13375783, 0.13434987, 0.18126539, 0.12777531,\n",
       "        0.21103352, 0.18251208, 0.17300859, 0.10168646, 0.10168646,\n",
       "        0.10910895, 0.12634761, 0.17043362, 0.19219463, 0.11024607,\n",
       "        0.23079278, 0.12009067, 0.17791944, 0.09816918, 0.14568627,\n",
       "        0.23235948, 0.22456812, 0.04492372, 0.16225452, 0.14792595,\n",
       "        0.08832018, 0.12009067, 0.17619048, 0.1086925 , 0.22762702]),\n",
       " 'rank_test_score': array([ 63, 119, 128, 123,  46,  95,  63, 128,  16,  30, 126,  95, 128,\n",
       "        146,  54,  54, 110, 134,  23,  54,  98, 106,  76, 123,  37,  68,\n",
       "         72, 141,  17,  37, 195, 158, 200, 192, 190, 157, 163, 169, 160,\n",
       "        171,  98, 109,  72, 137,  61,  78,  72, 147,   3,  68,  91,  77,\n",
       "         89, 149,  87, 123,  63, 138,  19,  61,  87, 103, 107, 119,  46,\n",
       "         98,  89, 122,   1,  17, 184, 171, 176, 182, 188, 178, 164, 176,\n",
       "        164, 198, 107, 117,  81, 145,  12,  27,  21, 138,   8,  37,  91,\n",
       "        103,  78, 110,  46, 117,  54, 134,   9,  81,  23, 110, 110, 128,\n",
       "         49,  94,  37, 126,  12,  34, 184, 155, 179, 152, 188, 167, 192,\n",
       "        164, 171, 199,  91,  95,  78, 143,  32,  72,  59, 110,   2,  44,\n",
       "         34,  98,  54, 150,  23,  49,   6, 134,  15,  34,  81, 128,  81,\n",
       "        103,  32,  68,  27, 142,   9,  37, 190, 197, 192, 158, 171, 195,\n",
       "        160, 153, 184, 179,  63, 128,  44, 147,   4,  59,  37, 119,   5,\n",
       "         27,  49,  81,  49, 110,  23,  68,  21, 138,  19,  30,  37,  98,\n",
       "         67, 110,   9,  81,  14, 143,   6,  49, 175, 151, 179, 156, 153,\n",
       "        167, 182, 160, 184, 169], dtype=int32),\n",
       " 'split0_train_score': array([0.80952381, 0.71428571, 0.72619048, 0.64285714, 0.36904762,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.9047619 , 0.61904762, 0.32142857, 0.60714286,\n",
       "        0.69047619, 0.73809524, 0.69047619, 0.69047619, 0.70238095,\n",
       "        0.94047619, 0.8452381 , 0.97619048, 0.61904762, 0.63095238,\n",
       "        0.94047619, 0.83333333, 0.69047619, 0.70238095, 0.72619048,\n",
       "        0.29761905, 0.32142857, 0.        , 0.36904762, 0.32142857,\n",
       "        0.36904762, 0.32142857, 0.32142857, 0.35714286, 0.36904762,\n",
       "        0.8452381 , 0.79761905, 0.95238095, 0.94047619, 0.63095238,\n",
       "        0.57142857, 0.82142857, 0.69047619, 0.82142857, 0.70238095,\n",
       "        0.69047619, 0.86904762, 0.78571429, 0.30952381, 0.61904762,\n",
       "        0.32142857, 0.91666667, 0.69047619, 0.75      , 0.72619048,\n",
       "        0.96428571, 0.69047619, 0.96428571, 0.30952381, 0.64285714,\n",
       "        0.54761905, 0.82142857, 0.69047619, 0.83333333, 0.69047619,\n",
       "        0.30952381, 0.3452381 , 0.36904762, 0.32142857, 0.30952381,\n",
       "        0.36904762, 0.32142857, 0.32142857, 0.32142857, 0.32142857,\n",
       "        0.97619048, 0.73809524, 0.77380952, 0.58333333, 0.72619048,\n",
       "        0.94047619, 0.95238095, 0.69047619, 0.92857143, 0.70238095,\n",
       "        0.94047619, 0.69047619, 0.88095238, 0.69047619, 0.60714286,\n",
       "        0.32142857, 0.69047619, 0.69047619, 0.95238095, 0.70238095,\n",
       "        0.96428571, 0.73809524, 0.67857143, 0.61904762, 0.63095238,\n",
       "        0.54761905, 0.89285714, 0.69047619, 0.77380952, 0.70238095,\n",
       "        0.32142857, 0.36904762, 0.        , 0.36904762, 0.        ,\n",
       "        0.32142857, 0.30952381, 0.30952381, 0.25      , 0.32142857,\n",
       "        0.94047619, 0.73809524, 0.80952381, 0.60714286, 0.71428571,\n",
       "        0.32142857, 0.79761905, 0.75      , 0.91666667, 0.70238095,\n",
       "        0.94047619, 0.70238095, 0.73809524, 0.69047619, 0.69047619,\n",
       "        0.32142857, 0.91666667, 0.69047619, 0.82142857, 0.69047619,\n",
       "        0.83333333, 0.77380952, 0.66666667, 0.89285714, 0.86904762,\n",
       "        0.70238095, 0.75      , 0.69047619, 0.77380952, 0.69047619,\n",
       "        0.32142857, 0.32142857, 0.32142857, 0.63095238, 0.36904762,\n",
       "        0.32142857, 0.32142857, 0.36904762, 0.30952381, 0.36904762,\n",
       "        0.97619048, 0.80952381, 0.69047619, 0.58333333, 0.64285714,\n",
       "        0.69047619, 0.9047619 , 0.71428571, 0.91666667, 0.79761905,\n",
       "        0.85714286, 0.86904762, 0.80952381, 0.77380952, 0.75      ,\n",
       "        0.33333333, 0.69047619, 0.70238095, 0.88095238, 0.70238095,\n",
       "        0.69047619, 0.83333333, 0.58333333, 0.89285714, 0.80952381,\n",
       "        0.33333333, 0.69047619, 0.69047619, 0.92857143, 0.69047619,\n",
       "        0.        , 0.36904762, 0.30952381, 0.36904762, 0.32142857,\n",
       "        0.32142857, 0.36904762, 0.30952381, 0.36904762, 0.32142857]),\n",
       " 'split1_train_score': array([0.97619048, 0.39285714, 0.69047619, 0.69047619, 0.61904762,\n",
       "        0.61904762, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.63095238, 0.44047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.46428571, 0.55952381, 0.69047619, 0.69047619, 0.63095238,\n",
       "        0.86904762, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.36904762, 0.63095238, 0.23809524, 0.32142857, 0.17857143,\n",
       "        0.32142857, 0.36904762, 0.32142857, 0.32142857, 0.30952381,\n",
       "        0.63095238, 0.3452381 , 0.69047619, 0.69047619, 0.89285714,\n",
       "        0.61904762, 0.69047619, 0.69047619, 0.8452381 , 0.69047619,\n",
       "        0.75      , 0.69047619, 0.69047619, 0.69047619, 0.39285714,\n",
       "        0.52380952, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.63095238, 0.69047619, 0.69047619, 0.69047619, 0.71428571,\n",
       "        0.61904762, 0.69047619, 0.69047619, 0.97619048, 0.89285714,\n",
       "        0.36904762, 0.        , 0.38095238, 0.38095238, 0.05952381,\n",
       "        0.30952381, 0.30952381, 0.30952381, 0.30952381, 0.32142857,\n",
       "        0.63095238, 0.69047619, 0.69047619, 0.69047619, 0.71428571,\n",
       "        0.61904762, 0.69047619, 0.69047619, 0.92857143, 0.69047619,\n",
       "        0.63095238, 0.46428571, 0.80952381, 0.69047619, 0.5       ,\n",
       "        0.30952381, 0.69047619, 0.69047619, 0.98809524, 0.69047619,\n",
       "        0.69047619, 0.32142857, 0.69047619, 0.69047619, 0.54761905,\n",
       "        0.42857143, 0.69047619, 0.66666667, 0.89285714, 0.69047619,\n",
       "        0.30952381, 0.36904762, 0.76190476, 0.5952381 , 0.32142857,\n",
       "        0.14285714, 0.36904762, 0.46428571, 0.3452381 , 0.27380952,\n",
       "        0.98809524, 0.69047619, 0.69047619, 0.69047619, 0.73809524,\n",
       "        0.61904762, 0.70238095, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.98809524, 0.5       , 0.86904762, 0.69047619, 0.89285714,\n",
       "        0.82142857, 0.95238095, 0.92857143, 0.92857143, 0.88095238,\n",
       "        0.96428571, 0.63095238, 0.72619048, 0.69047619, 0.39285714,\n",
       "        0.53571429, 0.82142857, 0.69047619, 0.79761905, 0.69047619,\n",
       "        0.04761905, 0.        , 0.04761905, 0.39285714, 0.32142857,\n",
       "        0.36904762, 0.36904762, 0.30952381, 0.32142857, 0.36904762,\n",
       "        0.85714286, 0.33333333, 0.73809524, 0.69047619, 0.92857143,\n",
       "        0.61904762, 0.69047619, 0.69047619, 0.75      , 0.69047619,\n",
       "        0.92857143, 0.48809524, 0.82142857, 0.69047619, 0.95238095,\n",
       "        0.60714286, 0.80952381, 0.69047619, 0.69047619, 0.91666667,\n",
       "        0.89285714, 0.61904762, 0.69047619, 0.69047619, 0.79761905,\n",
       "        0.52380952, 0.79761905, 0.69047619, 0.97619048, 0.94047619,\n",
       "        0.85714286, 0.69047619, 0.36904762, 0.32142857, 0.20238095,\n",
       "        0.41666667, 0.36904762, 0.32142857, 0.36904762, 0.3452381 ]),\n",
       " 'split2_train_score': array([0.63095238, 0.63095238, 0.64285714, 0.61904762, 0.80952381,\n",
       "        0.69047619, 0.73809524, 0.55952381, 0.78571429, 0.69047619,\n",
       "        0.63095238, 0.60714286, 0.61904762, 0.55952381, 0.73809524,\n",
       "        0.69047619, 0.71428571, 0.30952381, 0.69047619, 0.69047619,\n",
       "        0.46428571, 0.63095238, 0.60714286, 0.63095238, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.72619048, 0.72619048, 0.69047619,\n",
       "        0.32142857, 0.30952381, 0.02380952, 0.36904762, 0.30952381,\n",
       "        0.4047619 , 0.53571429, 0.29761905, 0.32142857, 0.32142857,\n",
       "        0.75      , 0.63095238, 0.63095238, 0.61904762, 0.69047619,\n",
       "        0.69047619, 0.82142857, 0.45238095, 0.86904762, 0.69047619,\n",
       "        0.63095238, 0.60714286, 0.70238095, 0.6547619 , 0.69047619,\n",
       "        0.69047619, 0.86904762, 0.33333333, 0.76190476, 0.73809524,\n",
       "        0.55952381, 0.55952381, 0.6547619 , 0.46428571, 0.69047619,\n",
       "        0.69047619, 0.3452381 , 0.30952381, 0.91666667, 0.76190476,\n",
       "        0.35714286, 0.32142857, 0.30952381, 0.30952381, 0.3452381 ,\n",
       "        0.36904762, 0.26190476, 0.67857143, 0.30952381, 0.32142857,\n",
       "        0.63095238, 0.63095238, 0.61904762, 0.61904762, 0.69047619,\n",
       "        0.69047619, 0.75      , 0.45238095, 0.92857143, 0.71428571,\n",
       "        0.64285714, 0.57142857, 0.64285714, 0.64285714, 0.69047619,\n",
       "        0.69047619, 0.96428571, 0.5952381 , 0.70238095, 0.69047619,\n",
       "        0.61904762, 0.61904762, 0.8452381 , 0.61904762, 0.82142857,\n",
       "        0.69047619, 0.97619048, 0.39285714, 0.91666667, 0.69047619,\n",
       "        0.36904762, 0.54761905, 0.30952381, 0.38095238, 0.36904762,\n",
       "        0.36904762, 0.32142857, 0.17857143, 0.36904762, 0.32142857,\n",
       "        0.63095238, 0.63095238, 0.82142857, 0.61904762, 0.92857143,\n",
       "        0.69047619, 0.96428571, 0.45238095, 0.89285714, 0.72619048,\n",
       "        0.75      , 0.63095238, 0.73809524, 0.45238095, 0.72619048,\n",
       "        0.69047619, 0.8452381 , 0.41666667, 0.70238095, 0.69047619,\n",
       "        0.63095238, 0.71428571, 0.97619048, 0.73809524, 0.71428571,\n",
       "        0.69047619, 0.75      , 0.44047619, 0.97619048, 0.69047619,\n",
       "        0.69047619, 0.03571429, 0.36904762, 0.36904762, 0.36904762,\n",
       "        0.        , 0.60714286, 0.36904762, 0.36904762, 0.        ,\n",
       "        0.64285714, 0.63095238, 0.75      , 0.63095238, 0.82142857,\n",
       "        0.69047619, 0.95238095, 0.77380952, 0.89285714, 0.71428571,\n",
       "        0.63095238, 0.60714286, 0.53571429, 0.53571429, 0.70238095,\n",
       "        0.69047619, 0.98809524, 0.69047619, 0.69047619, 0.71428571,\n",
       "        0.73809524, 0.71428571, 0.78571429, 0.71428571, 0.9047619 ,\n",
       "        0.69047619, 0.78571429, 0.45238095, 0.69047619, 0.70238095,\n",
       "        0.36904762, 0.        , 0.30952381, 0.30952381, 0.38095238,\n",
       "        0.30952381, 0.53571429, 0.69047619, 0.21428571, 0.55952381]),\n",
       " 'split3_train_score': array([0.69047619, 0.69047619, 0.69047619, 0.70238095, 0.63095238,\n",
       "        0.32142857, 0.69047619, 0.69047619, 0.91666667, 0.92857143,\n",
       "        0.69047619, 0.69047619, 0.76190476, 0.73809524, 0.30952381,\n",
       "        0.63095238, 0.69047619, 0.69047619, 0.96428571, 0.96428571,\n",
       "        0.69047619, 0.69047619, 0.85714286, 0.69047619, 0.4047619 ,\n",
       "        0.30952381, 0.69047619, 0.70238095, 0.91666667, 0.92857143,\n",
       "        0.36904762, 0.30952381, 0.36904762, 0.30952381, 0.30952381,\n",
       "        0.36904762, 0.30952381, 0.32142857, 0.30952381, 0.        ,\n",
       "        0.69047619, 0.69047619, 0.70238095, 0.69047619, 0.63095238,\n",
       "        0.3452381 , 0.69047619, 0.69047619, 0.97619048, 0.92857143,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.79761905, 0.41666667,\n",
       "        0.30952381, 0.69047619, 0.69047619, 0.94047619, 0.95238095,\n",
       "        0.69047619, 0.69047619, 0.70238095, 0.69047619, 0.32142857,\n",
       "        0.30952381, 0.69047619, 0.69047619, 0.98809524, 0.8452381 ,\n",
       "        0.        , 0.32142857, 0.27380952, 0.5       , 0.30952381,\n",
       "        0.30952381, 0.39285714, 0.33333333, 0.32142857, 0.36904762,\n",
       "        0.71428571, 0.77380952, 0.69047619, 0.69047619, 0.63095238,\n",
       "        0.51190476, 0.69047619, 0.69047619, 0.95238095, 0.95238095,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.64285714,\n",
       "        0.48809524, 0.72619048, 0.69047619, 0.96428571, 0.75      ,\n",
       "        0.78571429, 0.69047619, 0.95238095, 0.70238095, 0.48809524,\n",
       "        0.30952381, 0.69047619, 0.69047619, 0.95238095, 0.95238095,\n",
       "        0.32142857, 0.32142857, 0.32142857, 0.36904762, 0.32142857,\n",
       "        0.36904762, 0.52380952, 0.32142857, 0.30952381, 0.36904762,\n",
       "        0.69047619, 0.73809524, 0.69047619, 0.69047619, 0.63095238,\n",
       "        0.47619048, 0.69047619, 0.69047619, 0.98809524, 0.70238095,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.66666667,\n",
       "        0.5952381 , 0.83333333, 0.70238095, 0.97619048, 0.88095238,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.63095238,\n",
       "        0.63095238, 0.71428571, 0.69047619, 0.98809524, 0.91666667,\n",
       "        0.30952381, 0.36904762, 0.30952381, 0.30952381, 0.33333333,\n",
       "        0.36904762, 0.32142857, 0.69047619, 0.30952381, 0.30952381,\n",
       "        0.69047619, 0.73809524, 0.96428571, 0.70238095, 0.63095238,\n",
       "        0.63095238, 0.69047619, 0.69047619, 0.75      , 0.76190476,\n",
       "        0.69047619, 0.69047619, 0.83333333, 0.69047619, 0.61904762,\n",
       "        0.47619048, 0.73809524, 0.69047619, 0.92857143, 0.9047619 ,\n",
       "        0.70238095, 0.69047619, 0.85714286, 0.69047619, 0.76190476,\n",
       "        0.35714286, 0.77380952, 0.69047619, 0.9047619 , 0.9047619 ,\n",
       "        0.30952381, 0.32142857, 0.30952381, 0.30952381, 0.30952381,\n",
       "        0.32142857, 0.30952381, 0.38095238, 0.53571429, 0.        ]),\n",
       " 'split4_train_score': array([0.69047619, 0.69047619, 0.63095238, 0.63095238, 0.97619048,\n",
       "        0.97619048, 0.69047619, 0.69047619, 0.89285714, 0.9047619 ,\n",
       "        0.69047619, 0.69047619, 0.6547619 , 0.61904762, 0.97619048,\n",
       "        0.98809524, 0.69047619, 0.69047619, 0.94047619, 0.80952381,\n",
       "        0.69047619, 0.69047619, 0.63095238, 0.61904762, 0.97619048,\n",
       "        0.88095238, 0.69047619, 0.73809524, 0.92857143, 0.86904762,\n",
       "        0.22619048, 0.36904762, 0.36904762, 0.30952381, 0.69047619,\n",
       "        0.67857143, 0.32142857, 0.42857143, 0.32142857, 0.30952381,\n",
       "        0.69047619, 0.69047619, 0.72619048, 0.63095238, 0.98809524,\n",
       "        0.97619048, 0.70238095, 0.69047619, 0.96428571, 0.97619048,\n",
       "        0.69047619, 0.69047619, 0.75      , 0.63095238, 0.98809524,\n",
       "        0.96428571, 0.76190476, 0.69047619, 0.80952381, 0.80952381,\n",
       "        0.69047619, 0.69047619, 0.61904762, 0.51190476, 0.97619048,\n",
       "        0.97619048, 0.69047619, 0.70238095, 0.92857143, 0.91666667,\n",
       "        0.30952381, 0.30952381, 0.63095238, 0.30952381, 0.36904762,\n",
       "        0.30952381, 0.27380952, 0.30952381, 0.36904762, 0.0952381 ,\n",
       "        0.69047619, 0.69047619, 0.64285714, 0.63095238, 0.98809524,\n",
       "        0.97619048, 0.69047619, 0.69047619, 0.9047619 , 0.89285714,\n",
       "        0.69047619, 0.69047619, 0.64285714, 0.61904762, 0.94047619,\n",
       "        0.97619048, 0.82142857, 0.82142857, 0.95238095, 0.95238095,\n",
       "        0.69047619, 0.6547619 , 0.58333333, 0.63095238, 0.96428571,\n",
       "        0.97619048, 0.69047619, 0.69047619, 0.96428571, 0.83333333,\n",
       "        0.32142857, 0.32142857, 0.30952381, 0.69047619, 0.32142857,\n",
       "        0.30952381, 0.30952381, 0.66666667, 0.36904762, 0.36904762,\n",
       "        0.69047619, 0.69047619, 0.64285714, 0.63095238, 0.63095238,\n",
       "        0.97619048, 0.69047619, 0.79761905, 0.88095238, 0.97619048,\n",
       "        0.73809524, 0.69047619, 0.70238095, 0.3452381 , 0.77380952,\n",
       "        0.98809524, 0.9047619 , 0.77380952, 0.96428571, 0.83333333,\n",
       "        0.69047619, 0.69047619, 0.6547619 , 0.3452381 , 0.96428571,\n",
       "        0.80952381, 0.69047619, 0.69047619, 0.8452381 , 0.85714286,\n",
       "        0.01190476, 0.32142857, 0.        , 0.36904762, 0.30952381,\n",
       "        0.30952381, 0.36904762, 0.32142857, 0.30952381, 0.39285714,\n",
       "        0.69047619, 0.69047619, 0.6547619 , 0.61904762, 0.96428571,\n",
       "        0.97619048, 0.69047619, 0.69047619, 0.96428571, 0.98809524,\n",
       "        0.73809524, 0.69047619, 0.77380952, 0.63095238, 0.91666667,\n",
       "        0.97619048, 0.97619048, 0.69047619, 0.96428571, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.61904762, 0.63095238, 0.97619048,\n",
       "        0.88095238, 0.95238095, 0.69047619, 0.89285714, 0.45238095,\n",
       "        0.29761905, 0.32142857, 0.39285714, 0.30952381, 0.36904762,\n",
       "        0.30952381, 0.36904762, 0.53571429, 0.30952381, 0.30952381]),\n",
       " 'split5_train_score': array([0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.57142857, 0.36904762, 0.63095238, 0.63095238,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.71428571, 0.5952381 , 0.42857143, 0.69047619, 0.63095238,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.82142857,\n",
       "        0.69047619, 0.55952381, 0.38095238, 0.69047619, 0.69047619,\n",
       "        0.30952381, 0.30952381, 0.30952381, 0.30952381, 0.30952381,\n",
       "        0.47619048, 0.30952381, 0.32142857, 0.32142857, 0.38095238,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.83333333, 0.32142857, 0.69047619, 0.63095238,\n",
       "        0.70238095, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.76190476, 0.64285714, 0.69047619, 0.57142857,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.83333333, 0.30952381, 0.69047619, 0.69047619,\n",
       "        0.32142857, 0.30952381, 0.30952381, 0.30952381, 0.29761905,\n",
       "        0.36904762, 0.30952381, 0.30952381, 0.54761905, 0.32142857,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.72619048, 0.92857143, 0.32142857, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.61904762, 0.69047619,\n",
       "        0.69047619, 0.61904762, 0.79761905, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.58333333, 0.32142857, 0.69047619, 0.69047619,\n",
       "        0.36904762, 0.32142857, 0.30952381, 0.36904762, 0.30952381,\n",
       "        0.30952381, 0.30952381, 0.32142857, 0.36904762, 0.3452381 ,\n",
       "        0.63095238, 0.69047619, 0.69047619, 0.69047619, 0.77380952,\n",
       "        0.69047619, 0.64285714, 0.30952381, 0.69047619, 0.61904762,\n",
       "        0.94047619, 0.69047619, 0.70238095, 0.63095238, 0.69047619,\n",
       "        0.71428571, 0.61904762, 0.35714286, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.80952381,\n",
       "        0.69047619, 0.72619048, 0.61904762, 0.69047619, 0.69047619,\n",
       "        0.36904762, 0.32142857, 0.36904762, 0.32142857, 0.36904762,\n",
       "        0.35714286, 0.36904762, 0.5       , 0.32142857, 0.30952381,\n",
       "        0.69047619, 0.69047619, 0.69047619, 0.69047619, 0.82142857,\n",
       "        0.69047619, 0.4047619 , 0.38095238, 0.69047619, 0.69047619,\n",
       "        0.94047619, 0.69047619, 0.69047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.61904762, 0.61904762, 0.72619048, 0.69047619,\n",
       "        0.83333333, 0.69047619, 0.72619048, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.86904762, 0.61904762, 0.82142857, 0.69047619,\n",
       "        0.30952381, 0.69047619, 0.36904762, 0.30952381, 0.30952381,\n",
       "        0.30952381, 0.30952381, 0.36904762, 0.28571429, 0.19047619]),\n",
       " 'split6_train_score': array([0.80952381, 0.30952381, 0.75      , 0.69047619, 0.97619048,\n",
       "        0.63095238, 0.63095238, 0.30952381, 0.97619048, 0.80952381,\n",
       "        0.77380952, 0.75      , 0.91666667, 0.69047619, 0.96428571,\n",
       "        0.69047619, 0.61904762, 0.91666667, 0.91666667, 0.91666667,\n",
       "        0.63095238, 0.63095238, 0.69047619, 0.9047619 , 0.88095238,\n",
       "        0.75      , 0.66666667, 0.60714286, 0.94047619, 0.92857143,\n",
       "        0.36904762, 0.36904762, 0.        , 0.36904762, 0.30952381,\n",
       "        0.32142857, 0.36904762, 0.33333333, 0.72619048, 0.36904762,\n",
       "        0.63095238, 0.80952381, 0.83333333, 0.71428571, 0.64285714,\n",
       "        0.91666667, 0.45238095, 0.30952381, 0.96428571, 0.69047619,\n",
       "        0.91666667, 0.73809524, 0.95238095, 0.69047619, 0.73809524,\n",
       "        0.89285714, 0.63095238, 0.72619048, 0.96428571, 0.9047619 ,\n",
       "        0.96428571, 0.63095238, 0.72619048, 0.89285714, 0.82142857,\n",
       "        0.94047619, 0.61904762, 0.63095238, 0.91666667, 0.64285714,\n",
       "        0.32142857, 0.30952381, 0.30952381, 0.30952381, 0.38095238,\n",
       "        0.44047619, 0.46428571, 0.5       , 0.30952381, 0.        ,\n",
       "        0.76190476, 0.61904762, 0.71428571, 0.69047619, 0.97619048,\n",
       "        0.8452381 , 0.54761905, 0.63095238, 0.92857143, 0.94047619,\n",
       "        0.96428571, 0.80952381, 0.78571429, 0.85714286, 0.96428571,\n",
       "        0.89285714, 0.77380952, 0.46428571, 0.96428571, 0.75      ,\n",
       "        0.97619048, 0.86904762, 0.88095238, 0.69047619, 0.95238095,\n",
       "        0.63095238, 0.63095238, 0.83333333, 0.96428571, 0.96428571,\n",
       "        0.32142857, 0.36904762, 0.32142857, 0.30952381, 0.4047619 ,\n",
       "        0.32142857, 0.32142857, 0.32142857, 0.32142857, 0.30952381,\n",
       "        0.63095238, 0.96428571, 0.73809524, 0.69047619, 0.97619048,\n",
       "        0.96428571, 0.46428571, 0.63095238, 0.98809524, 0.92857143,\n",
       "        0.94047619, 0.63095238, 0.69047619, 0.82142857, 0.97619048,\n",
       "        0.97619048, 0.63095238, 0.63095238, 0.98809524, 0.92857143,\n",
       "        0.63095238, 0.63095238, 0.79761905, 0.69047619, 0.9047619 ,\n",
       "        0.96428571, 0.64285714, 0.35714286, 0.96428571, 0.95238095,\n",
       "        0.32142857, 0.36904762, 0.32142857, 0.32142857, 0.52380952,\n",
       "        0.30952381, 0.32142857, 0.48809524, 0.36904762, 0.57142857,\n",
       "        0.95238095, 0.61904762, 0.97619048, 0.69047619, 0.97619048,\n",
       "        0.91666667, 0.45238095, 0.64285714, 0.94047619, 0.71428571,\n",
       "        0.98809524, 0.80952381, 0.72619048, 0.91666667, 0.96428571,\n",
       "        0.96428571, 0.69047619, 0.33333333, 0.96428571, 0.86904762,\n",
       "        0.83333333, 0.63095238, 0.77380952, 0.71428571, 0.92857143,\n",
       "        0.94047619, 0.61904762, 0.35714286, 0.91666667, 0.75      ,\n",
       "        0.32142857, 0.36904762, 0.32142857, 0.32142857, 0.5952381 ,\n",
       "        0.32142857, 0.32142857, 0.30952381, 0.30952381, 0.32142857]),\n",
       " 'split7_train_score': array([0.69047619, 0.69047619, 0.39285714, 0.60714286, 0.88095238,\n",
       "        0.63095238, 0.71428571, 0.60714286, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.30952381, 0.63095238, 0.95238095,\n",
       "        0.83333333, 0.73809524, 0.58333333, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.72619048, 0.30952381, 0.8452381 ,\n",
       "        0.5       , 0.79761905, 0.36904762, 0.69047619, 0.69047619,\n",
       "        0.32142857, 0.69047619, 0.36904762, 0.32142857, 0.        ,\n",
       "        0.32142857, 0.36904762, 0.32142857, 0.30952381, 0.32142857,\n",
       "        0.69047619, 0.70238095, 0.70238095, 0.57142857, 0.82142857,\n",
       "        0.60714286, 0.80952381, 0.67857143, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.63095238, 0.30952381, 0.94047619,\n",
       "        0.3452381 , 0.86904762, 0.5       , 0.83333333, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.33333333, 0.30952381, 0.92857143,\n",
       "        0.33333333, 0.5952381 , 0.73809524, 0.70238095, 0.9047619 ,\n",
       "        0.54761905, 0.45238095, 0.30952381, 0.36904762, 0.36904762,\n",
       "        0.30952381, 0.61904762, 0.36904762, 0.32142857, 0.30952381,\n",
       "        0.69047619, 0.69047619, 0.61904762, 0.47619048, 0.95238095,\n",
       "        0.95238095, 0.85714286, 0.71428571, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.64285714, 0.79761905, 0.96428571,\n",
       "        0.98809524, 0.8452381 , 0.33333333, 0.83333333, 0.69047619,\n",
       "        0.95238095, 0.69047619, 0.58333333, 0.60714286, 0.80952381,\n",
       "        0.97619048, 0.96428571, 0.4047619 , 0.94047619, 0.69047619,\n",
       "        0.21428571, 0.36904762, 0.30952381, 0.30952381, 0.32142857,\n",
       "        0.32142857, 0.19047619, 0.        , 0.36904762, 0.30952381,\n",
       "        0.69047619, 0.69047619, 0.6547619 , 0.63095238, 0.63095238,\n",
       "        0.82142857, 0.96428571, 0.76190476, 0.8452381 , 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.61904762, 0.32142857, 0.8452381 ,\n",
       "        0.95238095, 0.97619048, 0.5       , 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.54761905, 0.76190476, 0.97619048,\n",
       "        0.63095238, 0.98809524, 0.53571429, 0.83333333, 0.69047619,\n",
       "        0.32142857, 0.32142857, 0.36904762, 0.30952381, 0.22619048,\n",
       "        0.38095238, 0.36904762, 0.30952381, 0.36904762, 0.47619048,\n",
       "        0.69047619, 0.69047619, 0.61904762, 0.52380952, 0.95238095,\n",
       "        0.5952381 , 0.95238095, 0.44047619, 0.69047619, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.63095238, 0.63095238, 0.95238095,\n",
       "        0.95238095, 0.97619048, 0.33333333, 0.73809524, 0.69047619,\n",
       "        0.69047619, 0.69047619, 0.61904762, 0.73809524, 0.96428571,\n",
       "        0.96428571, 0.92857143, 0.54761905, 0.69047619, 0.69047619,\n",
       "        0.19047619, 0.69047619, 0.22619048, 0.33333333, 0.69047619,\n",
       "        0.60714286, 0.36904762, 0.32142857, 0.33333333, 0.30952381]),\n",
       " 'split8_train_score': array([0.63095238, 0.41666667, 0.32142857, 0.33333333, 0.96428571,\n",
       "        0.92857143, 0.95238095, 0.94047619, 0.95238095, 0.96428571,\n",
       "        0.54761905, 0.44047619, 0.44047619, 0.35714286, 0.92857143,\n",
       "        0.92857143, 0.71428571, 0.89285714, 0.86904762, 0.58333333,\n",
       "        0.60714286, 0.5952381 , 0.54761905, 0.44047619, 0.94047619,\n",
       "        0.95238095, 0.94047619, 0.89285714, 0.78571429, 0.6547619 ,\n",
       "        0.        , 0.22619048, 0.32142857, 0.30952381, 0.36904762,\n",
       "        0.32142857, 0.36904762, 0.53571429, 0.55952381, 0.63095238,\n",
       "        0.61904762, 0.41666667, 0.60714286, 0.33333333, 0.6547619 ,\n",
       "        0.96428571, 0.96428571, 0.91666667, 0.95238095, 0.67857143,\n",
       "        0.61904762, 0.53571429, 0.5       , 0.39285714, 0.95238095,\n",
       "        0.94047619, 0.92857143, 0.79761905, 0.64285714, 0.63095238,\n",
       "        0.60714286, 0.60714286, 0.36904762, 0.9047619 , 0.96428571,\n",
       "        0.83333333, 0.96428571, 0.92857143, 0.94047619, 0.9047619 ,\n",
       "        0.30952381, 0.66666667, 0.30952381, 0.08333333, 0.36904762,\n",
       "        0.36904762, 0.30952381, 0.11904762, 0.38095238, 0.19047619,\n",
       "        0.63095238, 0.41666667, 0.95238095, 0.33333333, 0.96428571,\n",
       "        0.96428571, 0.96428571, 0.88095238, 0.86904762, 0.64285714,\n",
       "        0.54761905, 0.39285714, 0.5       , 0.39285714, 0.82142857,\n",
       "        0.5952381 , 0.92857143, 0.79761905, 0.82142857, 0.44047619,\n",
       "        0.60714286, 0.53571429, 0.33333333, 0.41666667, 0.94047619,\n",
       "        0.96428571, 0.96428571, 0.92857143, 0.80952381, 0.8452381 ,\n",
       "        0.30952381, 0.32142857, 0.30952381, 0.20238095, 0.36904762,\n",
       "        0.69047619, 0.        , 0.36904762, 0.19047619, 0.        ,\n",
       "        0.63095238, 0.41666667, 0.63095238, 0.33333333, 0.78571429,\n",
       "        0.94047619, 0.95238095, 0.80952381, 0.97619048, 0.66666667,\n",
       "        0.55952381, 0.39285714, 0.91666667, 0.32142857, 0.94047619,\n",
       "        0.85714286, 0.92857143, 0.73809524, 0.96428571, 0.55952381,\n",
       "        0.53571429, 0.36904762, 0.41666667, 0.32142857, 0.71428571,\n",
       "        0.94047619, 0.96428571, 0.82142857, 0.76190476, 0.76190476,\n",
       "        0.36904762, 0.32142857, 0.36904762, 0.39285714, 0.38095238,\n",
       "        0.29761905, 0.30952381, 0.36904762, 0.21428571, 0.36904762,\n",
       "        0.63095238, 0.41666667, 0.6547619 , 0.33333333, 0.96428571,\n",
       "        0.94047619, 0.96428571, 0.80952381, 0.91666667, 0.96428571,\n",
       "        0.61904762, 0.35714286, 0.63095238, 0.32142857, 0.82142857,\n",
       "        0.92857143, 0.94047619, 0.78571429, 0.83333333, 0.85714286,\n",
       "        0.60714286, 0.41666667, 0.95238095, 0.32142857, 0.79761905,\n",
       "        0.94047619, 0.96428571, 0.83333333, 0.85714286, 0.77380952,\n",
       "        0.53571429, 0.61904762, 0.30952381, 0.69047619, 0.36904762,\n",
       "        0.36904762, 0.        , 0.44047619, 0.30952381, 0.69047619]),\n",
       " 'split9_train_score': array([0.63095238, 0.88095238, 0.36904762, 0.73809524, 0.69047619,\n",
       "        0.69047619, 0.70238095, 0.58333333, 0.82142857, 0.76190476,\n",
       "        0.32142857, 0.63095238, 0.61904762, 0.32142857, 0.69047619,\n",
       "        0.69047619, 0.32142857, 0.30952381, 0.70238095, 0.69047619,\n",
       "        0.63095238, 0.63095238, 0.63095238, 0.63095238, 0.95238095,\n",
       "        0.89285714, 0.47619048, 0.33333333, 0.70238095, 0.69047619,\n",
       "        0.32142857, 0.30952381, 0.44047619, 0.14285714, 0.30952381,\n",
       "        0.32142857, 0.36904762, 0.32142857, 0.28571429, 0.57142857,\n",
       "        0.46428571, 0.30952381, 0.61904762, 0.30952381, 0.69047619,\n",
       "        0.96428571, 0.51190476, 0.3452381 , 0.94047619, 0.69047619,\n",
       "        0.33333333, 0.89285714, 0.38095238, 0.3452381 , 0.70238095,\n",
       "        0.69047619, 0.3452381 , 0.48809524, 0.69047619, 0.69047619,\n",
       "        0.46428571, 0.75      , 0.83333333, 0.96428571, 0.98809524,\n",
       "        0.69047619, 0.75      , 0.55952381, 0.8452381 , 0.69047619,\n",
       "        0.32142857, 0.30952381, 0.32142857, 0.28571429, 0.30952381,\n",
       "        0.32142857, 0.30952381, 0.30952381, 0.44047619, 0.32142857,\n",
       "        0.3452381 , 0.30952381, 0.63095238, 0.30952381, 0.91666667,\n",
       "        0.97619048, 0.73809524, 0.3452381 , 0.75      , 0.69047619,\n",
       "        0.45238095, 0.78571429, 0.54761905, 0.33333333, 0.95238095,\n",
       "        0.69047619, 0.72619048, 0.58333333, 0.79761905, 0.69047619,\n",
       "        0.96428571, 0.63095238, 0.32142857, 0.47619048, 0.70238095,\n",
       "        0.69047619, 0.64285714, 0.60714286, 0.69047619, 0.69047619,\n",
       "        0.32142857, 0.52380952, 0.32142857, 0.48809524, 0.32142857,\n",
       "        0.36904762, 0.28571429, 0.42857143, 0.41666667, 0.        ,\n",
       "        0.4047619 , 0.30952381, 0.63095238, 0.33333333, 0.9047619 ,\n",
       "        0.69047619, 0.63095238, 0.55952381, 0.94047619, 0.73809524,\n",
       "        0.42857143, 0.89285714, 0.61904762, 0.3452381 , 0.72619048,\n",
       "        0.69047619, 0.79761905, 0.45238095, 0.69047619, 0.70238095,\n",
       "        0.60714286, 0.30952381, 0.63095238, 0.96428571, 0.94047619,\n",
       "        0.69047619, 0.78571429, 0.63095238, 0.69047619, 0.69047619,\n",
       "        0.32142857, 0.32142857, 0.39285714, 0.44047619, 0.30952381,\n",
       "        0.32142857, 0.4047619 , 0.32142857, 0.25      , 0.        ,\n",
       "        0.48809524, 0.30952381, 0.8452381 , 0.33333333, 0.98809524,\n",
       "        0.69047619, 0.94047619, 0.44047619, 0.92857143, 0.72619048,\n",
       "        0.44047619, 0.8452381 , 0.82142857, 0.47619048, 0.69047619,\n",
       "        0.69047619, 0.44047619, 0.60714286, 0.70238095, 0.70238095,\n",
       "        0.98809524, 0.63095238, 0.61904762, 0.33333333, 0.82142857,\n",
       "        0.69047619, 0.86904762, 0.32142857, 0.94047619, 0.76190476,\n",
       "        0.30952381, 0.30952381, 0.42857143, 0.69047619, 0.30952381,\n",
       "        0.32142857, 0.36904762, 0.03571429, 0.45238095, 0.69047619]),\n",
       " 'mean_train_score': array([0.725     , 0.61071429, 0.59047619, 0.63452381, 0.76071429,\n",
       "        0.68690476, 0.70714286, 0.61309524, 0.8047619 , 0.77619048,\n",
       "        0.63571429, 0.65357143, 0.63214286, 0.56190476, 0.7547619 ,\n",
       "        0.7547619 , 0.65119048, 0.6202381 , 0.78452381, 0.73690476,\n",
       "        0.65      , 0.66547619, 0.7047619 , 0.62261905, 0.77738095,\n",
       "        0.74761905, 0.70357143, 0.61309524, 0.77738095, 0.75595238,\n",
       "        0.29047619, 0.38452381, 0.24404762, 0.31309524, 0.31071429,\n",
       "        0.39047619, 0.36428571, 0.35238095, 0.38333333, 0.35833333,\n",
       "        0.6702381 , 0.60833333, 0.71547619, 0.61904762, 0.73333333,\n",
       "        0.73452381, 0.7297619 , 0.57857143, 0.87142857, 0.73690476,\n",
       "        0.67142857, 0.70952381, 0.67738095, 0.55119048, 0.71309524,\n",
       "        0.63690476, 0.74642857, 0.625     , 0.77738095, 0.74047619,\n",
       "        0.6952381 , 0.66904762, 0.65833333, 0.64285714, 0.77380952,\n",
       "        0.66309524, 0.7       , 0.625     , 0.87380952, 0.79404762,\n",
       "        0.31666667, 0.33452381, 0.35238095, 0.31785714, 0.31190476,\n",
       "        0.34761905, 0.35714286, 0.35595238, 0.36309524, 0.25714286,\n",
       "        0.67619048, 0.625     , 0.70238095, 0.57142857, 0.825     ,\n",
       "        0.8202381 , 0.78095238, 0.61071429, 0.85714286, 0.76071429,\n",
       "        0.69404762, 0.64761905, 0.68333333, 0.63333333, 0.77738095,\n",
       "        0.66428571, 0.77857143, 0.64642857, 0.86666667, 0.7047619 ,\n",
       "        0.79404762, 0.64404762, 0.65595238, 0.61428571, 0.7547619 ,\n",
       "        0.69047619, 0.77261905, 0.62261905, 0.85952381, 0.775     ,\n",
       "        0.31785714, 0.38333333, 0.32738095, 0.40833333, 0.30595238,\n",
       "        0.35238095, 0.29404762, 0.33809524, 0.33095238, 0.26190476,\n",
       "        0.69285714, 0.65595238, 0.7       , 0.59166667, 0.77142857,\n",
       "        0.71904762, 0.75      , 0.6452381 , 0.88095238, 0.74404762,\n",
       "        0.76666667, 0.65119048, 0.72857143, 0.53095238, 0.79285714,\n",
       "        0.76071429, 0.84047619, 0.61904762, 0.84166667, 0.7547619 ,\n",
       "        0.69642857, 0.61904762, 0.6797619 , 0.67857143, 0.79166667,\n",
       "        0.72857143, 0.78333333, 0.61666667, 0.83214286, 0.76309524,\n",
       "        0.30833333, 0.2702381 , 0.28690476, 0.38571429, 0.35119048,\n",
       "        0.30357143, 0.37619048, 0.4047619 , 0.31428571, 0.31666667,\n",
       "        0.73095238, 0.59285714, 0.75833333, 0.5797619 , 0.86904762,\n",
       "        0.74404762, 0.76428571, 0.62738095, 0.84404762, 0.77380952,\n",
       "        0.75238095, 0.67380952, 0.72738095, 0.63571429, 0.80595238,\n",
       "        0.73095238, 0.78690476, 0.61428571, 0.81190476, 0.77380952,\n",
       "        0.76666667, 0.66071429, 0.72261905, 0.64166667, 0.8452381 ,\n",
       "        0.70119048, 0.825     , 0.58928571, 0.86190476, 0.73571429,\n",
       "        0.35      , 0.43809524, 0.33452381, 0.39642857, 0.38571429,\n",
       "        0.36071429, 0.33214286, 0.37142857, 0.34880952, 0.37380952]),\n",
       " 'std_train_score': array([0.10425337, 0.16895118, 0.15450528, 0.10794016, 0.1874348 ,\n",
       "        0.16928638, 0.09300964, 0.16930313, 0.11895234, 0.11266208,\n",
       "        0.11859438, 0.13089284, 0.15698495, 0.15692626, 0.1987204 ,\n",
       "        0.11333934, 0.11857645, 0.20325093, 0.11498422, 0.11572139,\n",
       "        0.12746437, 0.07385751, 0.11961768, 0.14992912, 0.17415572,\n",
       "        0.19812042, 0.12502267, 0.17843249, 0.10269194, 0.10244323,\n",
       "        0.10503212, 0.14365353, 0.16229383, 0.06209905, 0.16178655,\n",
       "        0.10738069, 0.06258781, 0.06966066, 0.13602721, 0.16011352,\n",
       "        0.09313907, 0.17353615, 0.09995038, 0.17536809, 0.11787518,\n",
       "        0.20217426, 0.14735479, 0.19577452, 0.10402882, 0.10981457,\n",
       "        0.13689959, 0.10118347, 0.14671864, 0.17897177, 0.19637084,\n",
       "        0.2404202 , 0.16530481, 0.1330194 , 0.1036535 , 0.11177804,\n",
       "        0.15116704, 0.05156288, 0.17991951, 0.22637837, 0.19713078,\n",
       "        0.2133611 , 0.1576471 , 0.18087796, 0.10005667, 0.10392659,\n",
       "        0.12578551, 0.1546199 , 0.09747376, 0.09803194, 0.08921426,\n",
       "        0.04117052, 0.10378331, 0.13836693, 0.07362689, 0.11519972,\n",
       "        0.14665584, 0.13967183, 0.0952381 , 0.14035507, 0.1376069 ,\n",
       "        0.16222395, 0.13129824, 0.16995481, 0.09945999, 0.11211353,\n",
       "        0.14840898, 0.12601065, 0.11068228, 0.15336365, 0.16375432,\n",
       "        0.23144278, 0.1047619 , 0.14831346, 0.10698401, 0.11673953,\n",
       "        0.14629301, 0.13515444, 0.20093672, 0.0914732 , 0.16158933,\n",
       "        0.21815293, 0.14911397, 0.18573336, 0.10416497, 0.10799266,\n",
       "        0.04021273, 0.07928965, 0.17253693, 0.13719431, 0.10608606,\n",
       "        0.12868161, 0.12565588, 0.16566023, 0.06339775, 0.13373663,\n",
       "        0.15710678, 0.17065384, 0.06581083, 0.13289149, 0.12173165,\n",
       "        0.20379061, 0.15865077, 0.15373284, 0.10527472, 0.10914141,\n",
       "        0.175949  , 0.12554304, 0.09141121, 0.18266731, 0.1069045 ,\n",
       "        0.19499477, 0.11978344, 0.17251639, 0.12866509, 0.11208193,\n",
       "        0.11532882, 0.14560843, 0.13928571, 0.19423377, 0.17376467,\n",
       "        0.1297346 , 0.1071164 , 0.1299529 , 0.10600587, 0.09995038,\n",
       "        0.17604965, 0.12778086, 0.13441842, 0.0914732 , 0.07207053,\n",
       "        0.10503887, 0.08234103, 0.11554367, 0.04826937, 0.17465548,\n",
       "        0.1443572 , 0.16656459, 0.1216443 , 0.13437624, 0.12909944,\n",
       "        0.13576127, 0.2011024 , 0.1431594 , 0.10425337, 0.10634624,\n",
       "        0.16450985, 0.15041515, 0.09721898, 0.15532863, 0.12486387,\n",
       "        0.21116779, 0.17475688, 0.1477534 , 0.1093425 , 0.09388926,\n",
       "        0.11029747, 0.09963795, 0.11406849, 0.16965434, 0.08892785,\n",
       "        0.22395196, 0.10754554, 0.15732763, 0.09482051, 0.12663892,\n",
       "        0.21177096, 0.21657507, 0.05388795, 0.14802651, 0.1387505 ,\n",
       "        0.0882961 , 0.12637565, 0.160939  , 0.08568948, 0.20565971])}"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grid_cv.cv_results_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Randomized grid search"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "randomized_grid_cv = model_selection.RandomizedSearchCV(classifier, parameters_grid, scoring = 'accuracy', cv = cv, n_iter = 20, \n",
    "                                                   random_state = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 353 ms, sys: 0 ns, total: 353 ms\n",
      "Wall time: 351 ms\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "RandomizedSearchCV(cv=StratifiedShuffleSplit(n_splits=10, random_state=0, test_size=0.2,\n",
       "            train_size=None),\n",
       "          error_score='raise-deprecating',\n",
       "          estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,\n",
       "       early_stopping=False, epsilon=0.1, eta0=0.0, fit_intercept=True,\n",
       "       l1_ratio=0.15, learning_rate='optimal', loss='hinge', max_iter=None,\n",
       "       n_iter=None, n_iter_no_change=5, n_jobs=None, penalty='l2',\n",
       "       power_t=0.5, random_state=0, shuffle=True, tol=0.001,\n",
       "       validation_fraction=0.1, verbose=0, warm_start=False),\n",
       "          fit_params=None, iid='warn', n_iter=20, n_jobs=None,\n",
       "          param_distributions={'loss': ['hinge', 'log', 'squared_hinge', 'squared_loss'], 'penalty': ['l1', 'l2'], 'max_iter': array([5, 6, 7, 8, 9]), 'alpha': array([0.0001 , 0.00032, 0.00055, 0.00078, 0.001  ])},\n",
       "          pre_dispatch='2*n_jobs', random_state=0, refit=True,\n",
       "          return_train_score='warn', scoring='accuracy', verbose=0)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "randomized_grid_cv.fit(train_data, train_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8666666666666667\n",
      "{'penalty': 'l1', 'max_iter': 9, 'loss': 'log', 'alpha': 0.00055}\n"
     ]
    }
   ],
   "source": [
    "print(randomized_grid_cv.best_score_)\n",
    "print(randomized_grid_cv.best_params_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2019-01-16 11:14:39\n",
      "Control sum: 949\n"
     ]
    }
   ],
   "source": [
    "#!/usr/bin/python\n",
    "\n",
    "from datetime import datetime\n",
    "\n",
    "\n",
    "def control_sum(str):\n",
    "    return sum(map(ord, list(str)))\n",
    "\n",
    "\n",
    "def check(reply):\n",
    "    def _is_number(str):\n",
    "        try:\n",
    "            int(str)\n",
    "            return True\n",
    "        except ValueError:\n",
    "            return False\n",
    "\n",
    "    if \"Control sum:\" not in reply:\n",
    "        return False\n",
    "    parts = reply.split(\"Control sum:\")\n",
    "    received_current_time = parts[0].strip()\n",
    "    received_control_sum = parts[1].strip()\n",
    "    if not _is_number(received_control_sum):\n",
    "        return False\n",
    "    else:\n",
    "        received_control_sum = int(received_control_sum)\n",
    "    expected_control_sum = control_sum(received_current_time)\n",
    "    return expected_control_sum == received_control_sum\n",
    "\n",
    "\n",
    "current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n",
    "print(current_time)\n",
    "print(\"Control sum: \" + str(control_sum(current_time)))\n",
    "\n",
    "#print check(current_time + '\\n' + \"Control sum: \" + str(control_sum(current_time)))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
